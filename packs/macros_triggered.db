{"_id":"Hwx8cMizpwgqkpyk","name":"+1 Bleeding","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//set vars\nconditionName = \"Bleeding\";\nsevIncrease = 1;\n//detect whether player has condition yet + proceed accordingly\nif (game.user.character.items.getName(conditionName) != undefined) {\n    //get old severity\n    oldValue = game.user.character.items.getName(conditionName).system.severity;\n    newValue = game.user.character.items.getName(conditionName).system.severity + sevIncrease;\n    //increase severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': newValue});\n    //create message text\n    msgFlavor = `Your condition worsens. Severity has increased from <strong>` + oldValue + `</strong> to <strong>` + newValue + `</strong>.`;\n} else {\n    //give the character the condition\n    const itemData = game.items.getName(conditionName).toObject();\n    await game.user.character.createEmbeddedDocuments(\"Item\", [itemData]);\n    //set severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': sevIncrease});\n    //create message text\n    msgFlavor = `You now suffer from this condition, with a severity of <strong>` + sevIncrease + `</strong>.`;\n}\n//get image url\nmsgImg = game.user.character.items.getName(conditionName).img;\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n    <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n            <div class=\"rollweaponh1\">${conditionName}</div>\n            <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n        </div>\n        <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n            <div class=\"body\">${msgFlavor}</div>\n        </div>\n    </div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"GBgXXAnPAdXSqTlf","name":"+1 Cowardice","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//set vars\nconditionName = \"Cowardice\";\nsevIncrease = 1;\n//detect whether player has condition yet + proceed accordingly\nif (game.user.character.items.getName(conditionName) != undefined) {\n    //get old severity\n    oldValue = game.user.character.items.getName(conditionName).system.severity;\n    newValue = game.user.character.items.getName(conditionName).system.severity + sevIncrease;\n    //increase severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': newValue});\n    //create message text\n    msgFlavor = `Your condition worsens. Severity has increased from <strong>` + oldValue + `</strong> to <strong>` + newValue + `</strong>.`;\n} else {\n    //give the character the condition\n    const itemData = game.items.getName(conditionName).toObject();\n    await game.user.character.createEmbeddedDocuments(\"Item\", [itemData]);\n    //set severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': sevIncrease});\n    //create message text\n    msgFlavor = `You now suffer from this condition, with a severity of <strong>` + sevIncrease + `</strong>.`;\n}\n//get image url\nmsgImg = game.user.character.items.getName(conditionName).img;\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n    <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n            <div class=\"rollweaponh1\">${conditionName}</div>\n            <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n        </div>\n        <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n            <div class=\"body\">${msgFlavor}</div>\n        </div>\n    </div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"IIKsL4JkHMm7sUtc","name":"+1 Cursed","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//set vars\nconditionName = \"Cursed\";\nsevIncrease = 1;\n//detect whether player has condition yet + proceed accordingly\nif (game.user.character.items.getName(conditionName) != undefined) {\n    //get old severity\n    oldValue = game.user.character.items.getName(conditionName).system.severity;\n    newValue = game.user.character.items.getName(conditionName).system.severity + sevIncrease;\n    //increase severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': newValue});\n    //create message text\n    msgFlavor = `Your condition worsens. Severity has increased from <strong>` + oldValue + `</strong> to <strong>` + newValue + `</strong>.`;\n} else {\n    //give the character the condition\n    const itemData = game.items.getName(conditionName).toObject();\n    await game.user.character.createEmbeddedDocuments(\"Item\", [itemData]);\n    //set severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': sevIncrease});\n    //create message text\n    msgFlavor = `You now suffer from this condition, with a severity of <strong>` + sevIncrease + `</strong>.`;\n}\n//get image url\nmsgImg = game.user.character.items.getName(conditionName).img;\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n    <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n            <div class=\"rollweaponh1\">${conditionName}</div>\n            <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n        </div>\n        <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n            <div class=\"body\">${msgFlavor}</div>\n        </div>\n    </div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"pf8LE4pcs4VJgWyC","name":"+1 Death Wish","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//set vars\nconditionName = \"Death Wish\";\nsevIncrease = 1;\n//detect whether player has condition yet + proceed accordingly\nif (game.user.character.items.getName(conditionName) != undefined) {\n    //get old severity\n    oldValue = game.user.character.items.getName(conditionName).system.severity;\n    newValue = game.user.character.items.getName(conditionName).system.severity + sevIncrease;\n    //increase severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': newValue});\n    //create message text\n    msgFlavor = `Your condition worsens. Severity has increased from <strong>` + oldValue + `</strong> to <strong>` + newValue + `</strong>.`;\n} else {\n    //give the character the condition\n    const itemData = game.items.getName(conditionName).toObject();\n    await game.user.character.createEmbeddedDocuments(\"Item\", [itemData]);\n    //set severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': sevIncrease});\n    //create message text\n    msgFlavor = `You now suffer from this condition, with a severity of <strong>` + sevIncrease + `</strong>.`;\n}\n//get image url\nmsgImg = game.user.character.items.getName(conditionName).img;\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n    <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n            <div class=\"rollweaponh1\">${conditionName}</div>\n            <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n        </div>\n        <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n            <div class=\"body\">${msgFlavor}</div>\n        </div>\n    </div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"f9t2fVPwipu2A6hG","name":"+1 Deflated","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//set vars\nconditionName = \"Deflated\";\nsevIncrease = 1;\n//detect whether player has condition yet + proceed accordingly\nif (game.user.character.items.getName(conditionName) != undefined) {\n    //get old severity\n    oldValue = game.user.character.items.getName(conditionName).system.severity;\n    newValue = game.user.character.items.getName(conditionName).system.severity + sevIncrease;\n    //increase severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': newValue});\n    //create message text\n    msgFlavor = `Your condition worsens. Severity has increased from <strong>` + oldValue + `</strong> to <strong>` + newValue + `</strong>.`;\n} else {\n    //give the character the condition\n    const itemData = game.items.getName(conditionName).toObject();\n    await game.user.character.createEmbeddedDocuments(\"Item\", [itemData]);\n    //set severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': sevIncrease});\n    //create message text\n    msgFlavor = `You now suffer from this condition, with a severity of <strong>` + sevIncrease + `</strong>.`;\n}\n//get image url\nmsgImg = game.user.character.items.getName(conditionName).img;\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n    <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n            <div class=\"rollweaponh1\">${conditionName}</div>\n            <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n        </div>\n        <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n            <div class=\"body\">${msgFlavor}</div>\n        </div>\n    </div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"8Ctzto8oe2IRn2A0","name":"+1 Downward Spiral","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//set vars\nconditionName = \"Downward Spiral\";\nsevIncrease = 1;\n//detect whether player has condition yet + proceed accordingly\nif (game.user.character.items.getName(conditionName) != undefined) {\n    //get old severity\n    oldValue = game.user.character.items.getName(conditionName).system.severity;\n    newValue = game.user.character.items.getName(conditionName).system.severity + sevIncrease;\n    //increase severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': newValue});\n    //create message text\n    msgFlavor = `Your condition worsens. Severity has increased from <strong>` + oldValue + `</strong> to <strong>` + newValue + `</strong>.`;\n} else {\n    //give the character the condition\n    const itemData = game.items.getName(conditionName).toObject();\n    await game.user.character.createEmbeddedDocuments(\"Item\", [itemData]);\n    //set severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': sevIncrease});\n    //create message text\n    msgFlavor = `You now suffer from this condition, with a severity of <strong>` + sevIncrease + `</strong>.`;\n}\n//get image url\nmsgImg = game.user.character.items.getName(conditionName).img;\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n    <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n            <div class=\"rollweaponh1\">${conditionName}</div>\n            <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n        </div>\n        <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n            <div class=\"body\">${msgFlavor}</div>\n        </div>\n    </div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"dijVVDwV9vinAnnX","name":"+1 Imposter Syndrome","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//set vars\nconditionName = \"Imposter Syndrome\";\nsevIncrease = 1;\n//detect whether player has condition yet + proceed accordingly\nif (game.user.character.items.getName(conditionName) != undefined) {\n    //get old severity\n    oldValue = game.user.character.items.getName(conditionName).system.severity;\n    newValue = game.user.character.items.getName(conditionName).system.severity + sevIncrease;\n    //increase severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': newValue});\n    //create message text\n    msgFlavor = `Your condition worsens. Severity has increased from <strong>` + oldValue + `</strong> to <strong>` + newValue + `</strong>.`;\n} else {\n    //give the character the condition\n    const itemData = game.items.getName(conditionName).toObject();\n    await game.user.character.createEmbeddedDocuments(\"Item\", [itemData]);\n    //set severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': sevIncrease});\n    //create message text\n    msgFlavor = `You now suffer from this condition, with a severity of <strong>` + sevIncrease + `</strong>.`;\n}\n//get image url\nmsgImg = game.user.character.items.getName(conditionName).img;\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n    <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n            <div class=\"rollweaponh1\">${conditionName}</div>\n            <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n        </div>\n        <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n            <div class=\"body\">${msgFlavor}</div>\n        </div>\n    </div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"xjoCIapSoah0Ltpn","name":"+1 Insomnia","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//set vars\nconditionName = \"Insomnia\";\nsevIncrease = 1;\n//detect whether player has condition yet + proceed accordingly\nif (game.user.character.items.getName(conditionName) != undefined) {\n    //get old severity\n    oldValue = game.user.character.items.getName(conditionName).system.severity;\n    newValue = game.user.character.items.getName(conditionName).system.severity + sevIncrease;\n    //increase severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': newValue});\n    //create message text\n    msgFlavor = `Your condition worsens. Severity has increased from <strong>` + oldValue + `</strong> to <strong>` + newValue + `</strong>.`;\n} else {\n    //give the character the condition\n    const itemData = game.items.getName(conditionName).toObject();\n    await game.user.character.createEmbeddedDocuments(\"Item\", [itemData]);\n    //set severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': sevIncrease});\n    //create message text\n    msgFlavor = `You now suffer from this condition, with a severity of <strong>` + sevIncrease + `</strong>.`;\n}\n//get image url\nmsgImg = game.user.character.items.getName(conditionName).img;\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n    <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n            <div class=\"rollweaponh1\">${conditionName}</div>\n            <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n        </div>\n        <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n            <div class=\"body\">${msgFlavor}</div>\n        </div>\n    </div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"gw6JG5I6RD2JtvC2","name":"+1 Minimum Stress","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//get attribute to compare against\ncurValue = game.user.character.system.other.stress.min;\nminValue = game.user.character.system.other.stress.min;\nmaxValue = game.user.character.system.other.stress.max;\n//set value to add\nmsgHeader = 'MINIMUM STRESS GAINED';\nmsgImg = 'modules/fvtt_mosh_1e_psg/icons/macros/gain_stress.png';\nvalueMod = 1;\n//set new value level\nif (curValue + valueMod > maxValue) {\n    newValue = maxValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n    newWounds = curWounds;\n} else if (curValue + valueMod < minValue) {\n    newValue = minValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n} else {\n    newValue = curValue + valueMod;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n    newWounds = curWounds;\n}\n//create value flavor text\nif (game.user.character.system.class.value === 'Android') {\n    msgFlavor = `Power surges through your chest and you start to overheat.<br><br>`;\n} else {\n    msgFlavor = `You feel tightness in your chest and start to sweat.<br><br>`;\n}\n//create chat variables\nif (valueMod > 0 && newValue === maxValue && valueDiff === 0) {\n    msgOutcome = `You are already at Maximum stress.`;\n} else if (valueMod > 0 && valueDiff > 0) {\n    msgOutcome = `Minimum Stress increased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n}\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n    <div class=\"rollweaponh1\">${msgHeader}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n    </div>\n    <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n    <div class=\"body\">\n    ${msgFlavor} ${msgOutcome}\n    </div>\n    </div>\n</div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});\n//update characters value level\ngame.user.character.update({'system.other.stress.min': newValue});\n//change current value if max is lower\nif (newValue > game.user.character.system.other.stress.value) {\n    game.user.character.update({'system.other.stress.value': newValue});\n}","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"3IeZ5taOapOR54M7","name":"+1 Paranoia","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//set vars\nconditionName = \"Paranoia\";\nsevIncrease = 1;\n//detect whether player has condition yet + proceed accordingly\nif (game.user.character.items.getName(conditionName) != undefined) {\n    //get old severity\n    oldValue = game.user.character.items.getName(conditionName).system.severity;\n    newValue = game.user.character.items.getName(conditionName).system.severity + sevIncrease;\n    //increase severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': newValue});\n    //create message text\n    msgFlavor = `Your condition worsens. Severity has increased from <strong>` + oldValue + `</strong> to <strong>` + newValue + `</strong>.`;\n} else {\n    //give the character the condition\n    const itemData = game.items.getName(conditionName).toObject();\n    await game.user.character.createEmbeddedDocuments(\"Item\", [itemData]);\n    //set severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': sevIncrease});\n    //create message text\n    msgFlavor = `You now suffer from this condition, with a severity of <strong>` + sevIncrease + `</strong>.`;\n}\n//get image url\nmsgImg = game.user.character.items.getName(conditionName).img;\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n    <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n            <div class=\"rollweaponh1\">${conditionName}</div>\n            <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n        </div>\n        <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n            <div class=\"body\">${msgFlavor}</div>\n        </div>\n    </div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"Z1T5tOsCrWxcllPN","name":"+1 Phobia","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//set vars\nconditionName = \"Phobia\";\nsevIncrease = 1;\n//detect whether player has condition yet + proceed accordingly\nif (game.user.character.items.getName(conditionName) != undefined) {\n    //get old severity\n    oldValue = game.user.character.items.getName(conditionName).system.severity;\n    newValue = game.user.character.items.getName(conditionName).system.severity + sevIncrease;\n    //increase severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': newValue});\n    //create message text\n    msgFlavor = `Your condition worsens. Severity has increased from <strong>` + oldValue + `</strong> to <strong>` + newValue + `</strong>.`;\n} else {\n    //give the character the condition\n    const itemData = game.items.getName(conditionName).toObject();\n    await game.user.character.createEmbeddedDocuments(\"Item\", [itemData]);\n    //set severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': sevIncrease});\n    //create message text\n    msgFlavor = `You now suffer from this condition, with a severity of <strong>` + sevIncrease + `</strong>.`;\n}\n//get image url\nmsgImg = game.user.character.items.getName(conditionName).img;\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n    <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n            <div class=\"rollweaponh1\">${conditionName}</div>\n            <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n        </div>\n        <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n            <div class=\"body\">${msgFlavor}</div>\n        </div>\n    </div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"HYnmIvwswHZYfgio","name":"+1 Sleep Demon","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//set vars\nconditionName = \"Sleep Demon\";\nsevIncrease = 1;\n//detect whether player has condition yet + proceed accordingly\nif (game.user.character.items.getName(conditionName) != undefined) {\n    //get old severity\n    oldValue = game.user.character.items.getName(conditionName).system.severity;\n    newValue = game.user.character.items.getName(conditionName).system.severity + sevIncrease;\n    //increase severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': newValue});\n    //create message text\n    msgFlavor = `Your condition worsens. Severity has increased from <strong>` + oldValue + `</strong> to <strong>` + newValue + `</strong>.`;\n} else {\n    //give the character the condition\n    const itemData = game.items.getName(conditionName).toObject();\n    await game.user.character.createEmbeddedDocuments(\"Item\", [itemData]);\n    //set severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': sevIncrease});\n    //create message text\n    msgFlavor = `You now suffer from this condition, with a severity of <strong>` + sevIncrease + `</strong>.`;\n}\n//get image url\nmsgImg = game.user.character.items.getName(conditionName).img;\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n    <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n            <div class=\"rollweaponh1\">${conditionName}</div>\n            <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n        </div>\n        <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n            <div class=\"body\">${msgFlavor}</div>\n        </div>\n    </div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"UHrmyId4OQkmz92F","name":"+1 Stress","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//get attribute to compare against\ncurValue = game.user.character.system.other.stress.value;\nminValue = game.user.character.system.other.stress.min;\nmaxValue = game.user.character.system.other.stress.max;\n//set value to add\nmsgHeader = 'STRESS GAINED';\nmsgImg = 'modules/fvtt_mosh_1e_psg/icons/macros/gain_stress.png';\nvalueMod = 1;\n//set new value level\nif (curValue + valueMod > maxValue) {\n    newValue = maxValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n} else if (curValue + valueMod < minValue) {\n    newValue = minValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n} else {\n    newValue = curValue + valueMod;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n}\n//create value flavor text\nif (game.user.character.system.class.value === 'Android') {\n    msgFlavor = `Power surges through your chest and you start to overheat.<br><br>`;\n} else {\n    msgFlavor = `You feel tightness in your chest and start to sweat.<br><br>`;\n}\n//create chat variables\nif (valueMod < 0 && newValue === minValue && valueDiff === 0) {\n    msgOutcome = `You are already as calm as possible.`;\n} else if (valueDiff > 0 && actorImpact === 0) {\n    msgOutcome = `Stress increased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueDiff > 0 && actorImpact > 0) {\n    msgOutcome = `You hit rock bottom. Stress increased from <strong>${curValue}</strong> to <strong>${newValue}</strong>. You must also <strong>reduce the most relevant Stat or Save by ${actorImpact}</strong>.`;\n} else if (valueDiff === 0 && actorImpact > 0) {\n    msgOutcome = `You feel a part of yourself drift away. <strong>Reduce the most relevant Stat or Save by ${actorImpact}</strong>.`;\n}\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n    <div class=\"rollweaponh1\">${msgHeader}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n    </div>\n    <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n    <div class=\"body\">\n    ${msgFlavor} ${msgOutcome}\n    </div>\n    </div>\n</div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});\n//update characters value level\ngame.user.character.update({'system.other.stress.value': newValue});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"kTwRy7CPJdeq7foE","name":"+1d10 Health","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//get attribute to compare against\ncurValue = game.user.character.system.health.value;\nminValue = game.user.character.system.health.min;\nmaxValue = game.user.character.system.health.max;\ncurWounds = game.user.character.system.hits.value;\nmaxWounds = game.user.character.system.hits.max;\n//roll dice\nlet macroRoll = await new Roll(\"1d10\").evaluate();\n//turn 10 to 0\nif (macroRoll.total === 10) {macroRoll.total = 0}\n//set stressmod\nvalueMod = macroRoll.total;\n//set value to add\nmsgHeader = 'HEALTH GAINED';\nmsgImg = 'modules/fvtt_mosh_1e_psg/icons/attributes/health.png';\n//set new value level\nif (curValue + valueMod > maxValue) {\n    newValue = maxValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n    newWounds = curWounds;\n} else if (curValue + valueMod < minValue) {\n    newValue = minValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n} else {\n    newValue = curValue + valueMod;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n    newWounds = curWounds;\n}\n//update characters value level\ngame.user.character.update({'system.health.value': newValue});\ngame.user.character.update({'system.hits.value': newWounds});\n//create value flavor text\nif (game.user.character.system.class.value === 'Android') {\n    msgFlavor = `System resources free up and you feel energized.<br><br>`;\n} else {\n    msgFlavor = `You feel a burst of energy.<br><br>`;\n}\n//create chat variables\nif (valueMod > 0 && newValue === maxValue && valueDiff === 0) {\n    msgOutcome = `You are already at full health.`;\n} else if (valueMod > 0 && valueDiff > 0) {\n    msgOutcome = `Health increased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueMod < 0 && valueDiff < 0) {\n    msgOutcome = `Health decreased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueMod < 0 && valueDiff < 0 && newValue <= minValue) {\n    woundImpact = 1;\n    newWounds = curWounds + 1;\n    newValue = maxValue+actorImpact;\n    msgOutcome = `Health decreased by ${valueMod} points. You gain a wound and now have ${newValue} Health.<br><br>@Macro[Wound Check]{Make a Wound Check}`;\n} else if (valueMod < 0 && valueDiff < 0 && newValue <= minValue  && curWounds === maxWounds) {\n    woundImpact = 0;\n    newWounds = curWounds;\n    msgOutcome = `You are at death's door.<br><br>@Macro[Death Check]{Make a Death Check}`;\n}\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n    <div class=\"rollweaponh1\">${msgHeader}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n    </div>\n    <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n    <div class=\"body\">\n    ${msgFlavor} ${msgOutcome}\n    </div>\n    </div>\n</div>\n</div>\n`;\nchatId = randomID();\n//make message\nmacroMsg = await macroRoll.toMessage({\n  id: chatId,\n  user: game.user._id,\n  speaker: ChatMessage.getSpeaker({token: actor}),\n  content: macroResult\n},{keepId:true});\n//make dice\nawait game.dice3d.waitFor3DAnimationByMessageID(chatId);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"TyFC1aKQYPkv27IC","name":"+2 Bleeding","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//set vars\nconditionName = \"Bleeding\";\nsevIncrease = 2;\n//detect whether player has condition yet + proceed accordingly\nif (game.user.character.items.getName(conditionName) != undefined) {\n    //get old severity\n    oldValue = game.user.character.items.getName(conditionName).system.severity;\n    newValue = game.user.character.items.getName(conditionName).system.severity + sevIncrease;\n    //increase severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': newValue});\n    //create message text\n    msgFlavor = `Your condition worsens. Severity has increased from <strong>` + oldValue + `</strong> to <strong>` + newValue + `</strong>.`;\n} else {\n    //give the character the condition\n    const itemData = game.items.getName(conditionName).toObject();\n    await game.user.character.createEmbeddedDocuments(\"Item\", [itemData]);\n    //set severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': sevIncrease});\n    //create message text\n    msgFlavor = `You now suffer from this condition, with a severity of <strong>` + sevIncrease + `</strong>.`;\n}\n//get image url\nmsgImg = game.user.character.items.getName(conditionName).img;\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n    <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n            <div class=\"rollweaponh1\">${conditionName}</div>\n            <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n        </div>\n        <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n            <div class=\"body\">${msgFlavor}</div>\n        </div>\n    </div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"hUYkHFRIK4lLxwAq","name":"+2 Stress","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//get attribute to compare against\ncurValue = game.user.character.system.other.stress.value;\nminValue = game.user.character.system.other.stress.min;\nmaxValue = game.user.character.system.other.stress.max;\n//set value to add\nmsgHeader = 'STRESS GAINED';\nmsgImg = 'modules/fvtt_mosh_1e_psg/icons/macros/gain_stress.png';\nvalueMod = 2;\n//set new value level\nif (curValue + valueMod > maxValue) {\n    newValue = maxValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n} else if (curValue + valueMod < minValue) {\n    newValue = minValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n} else {\n    newValue = curValue + valueMod;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n}\n//create value flavor text\nif (game.user.character.system.class.value === 'Android') {\n    msgFlavor = `Power surges through your chest and you start to overheat.<br><br>`;\n} else {\n    msgFlavor = `You feel tightness in your chest and start to sweat.<br><br>`;\n}\n//create chat variables\nif (valueMod < 0 && newValue === minValue && valueDiff === 0) {\n    msgOutcome = `You are already as calm as possible.`;\n} else if (valueDiff > 0 && actorImpact === 0) {\n    msgOutcome = `Stress increased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueDiff > 0 && actorImpact > 0) {\n    msgOutcome = `You hit rock bottom. Stress increased from <strong>${curValue}</strong> to <strong>${newValue}</strong>. You must also <strong>reduce the most relevant Stat or Save by ${actorImpact}</strong>.`;\n} else if (valueDiff === 0 && actorImpact > 0) {\n    msgOutcome = `You feel a part of yourself drift away. <strong>Reduce the most relevant Stat or Save by ${actorImpact}</strong>.`;\n}\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n    <div class=\"rollweaponh1\">${msgHeader}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n    </div>\n    <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n    <div class=\"body\">\n    ${msgFlavor} ${msgOutcome}\n    </div>\n    </div>\n</div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});\n//update characters value level\ngame.user.character.update({'system.other.stress.value': newValue});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"EL4byI7zh2x8wW7L","name":"+3 Bleeding","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//set vars\nconditionName = \"Bleeding\";\nsevIncrease = 3;\n//detect whether player has condition yet + proceed accordingly\nif (game.user.character.items.getName(conditionName) != undefined) {\n    //get old severity\n    oldValue = game.user.character.items.getName(conditionName).system.severity;\n    newValue = game.user.character.items.getName(conditionName).system.severity + sevIncrease;\n    //increase severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': newValue});\n    //create message text\n    msgFlavor = `Your condition worsens. Severity has increased from <strong>` + oldValue + `</strong> to <strong>` + newValue + `</strong>.`;\n} else {\n    //give the character the condition\n    const itemData = game.items.getName(conditionName).toObject();\n    await game.user.character.createEmbeddedDocuments(\"Item\", [itemData]);\n    //set severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': sevIncrease});\n    //create message text\n    msgFlavor = `You now suffer from this condition, with a severity of <strong>` + sevIncrease + `</strong>.`;\n}\n//get image url\nmsgImg = game.user.character.items.getName(conditionName).img;\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n    <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n            <div class=\"rollweaponh1\">${conditionName}</div>\n            <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n        </div>\n        <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n            <div class=\"body\">${msgFlavor}</div>\n        </div>\n    </div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"UheUd51Okp0mPsVm","name":"+4 Bleeding","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//set vars\nconditionName = \"Bleeding\";\nsevIncrease = 4;\n//detect whether player has condition yet + proceed accordingly\nif (game.user.character.items.getName(conditionName) != undefined) {\n    //get old severity\n    oldValue = game.user.character.items.getName(conditionName).system.severity;\n    newValue = game.user.character.items.getName(conditionName).system.severity + sevIncrease;\n    //increase severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': newValue});\n    //create message text\n    msgFlavor = `Your condition worsens. Severity has increased from <strong>` + oldValue + `</strong> to <strong>` + newValue + `</strong>.`;\n} else {\n    //give the character the condition\n    const itemData = game.items.getName(conditionName).toObject();\n    await game.user.character.createEmbeddedDocuments(\"Item\", [itemData]);\n    //set severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': sevIncrease});\n    //create message text\n    msgFlavor = `You now suffer from this condition, with a severity of <strong>` + sevIncrease + `</strong>.`;\n}\n//get image url\nmsgImg = game.user.character.items.getName(conditionName).img;\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n    <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n            <div class=\"rollweaponh1\">${conditionName}</div>\n            <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n        </div>\n        <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n            <div class=\"body\">${msgFlavor}</div>\n        </div>\n    </div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"33mppIJPeuoP84cl","name":"+5 Bleeding","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//set vars\nconditionName = \"Bleeding\";\nsevIncrease = 5;\n//detect whether player has condition yet + proceed accordingly\nif (game.user.character.items.getName(conditionName) != undefined) {\n    //get old severity\n    oldValue = game.user.character.items.getName(conditionName).system.severity;\n    newValue = game.user.character.items.getName(conditionName).system.severity + sevIncrease;\n    //increase severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': newValue});\n    //create message text\n    msgFlavor = `Your condition worsens. Severity has increased from <strong>` + oldValue + `</strong> to <strong>` + newValue + `</strong>.`;\n} else {\n    //give the character the condition\n    const itemData = game.items.getName(conditionName).toObject();\n    await game.user.character.createEmbeddedDocuments(\"Item\", [itemData]);\n    //set severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': sevIncrease});\n    //create message text\n    msgFlavor = `You now suffer from this condition, with a severity of <strong>` + sevIncrease + `</strong>.`;\n}\n//get image url\nmsgImg = game.user.character.items.getName(conditionName).img;\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n    <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n            <div class=\"rollweaponh1\">${conditionName}</div>\n            <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n        </div>\n        <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n            <div class=\"body\">${msgFlavor}</div>\n        </div>\n    </div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"SGnlkrqMJOJyq7X0","name":"+6 Bleeding","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//set vars\nconditionName = \"Bleeding\";\nsevIncrease = 6;\n//detect whether player has condition yet + proceed accordingly\nif (game.user.character.items.getName(conditionName) != undefined) {\n    //get old severity\n    oldValue = game.user.character.items.getName(conditionName).system.severity;\n    newValue = game.user.character.items.getName(conditionName).system.severity + sevIncrease;\n    //increase severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': newValue});\n    //create message text\n    msgFlavor = `Your condition worsens. Severity has increased from <strong>` + oldValue + `</strong> to <strong>` + newValue + `</strong>.`;\n} else {\n    //give the character the condition\n    const itemData = game.items.getName(conditionName).toObject();\n    await game.user.character.createEmbeddedDocuments(\"Item\", [itemData]);\n    //set severity of the condition\n    game.user.character.items.getName(conditionName).update({'system.severity': sevIncrease});\n    //create message text\n    msgFlavor = `You now suffer from this condition, with a severity of <strong>` + sevIncrease + `</strong>.`;\n}\n//get image url\nmsgImg = game.user.character.items.getName(conditionName).img;\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n    <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n            <div class=\"rollweaponh1\">${conditionName}</div>\n            <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n        </div>\n        <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n            <div class=\"body\">${msgFlavor}</div>\n        </div>\n    </div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"Q32Jp4MIAkK7aqUs","name":"-1 All Stats/Saves","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//get attribute to compare against\nstrValue = game.user.character.system.stats.strength.value;\nspdValue = game.user.character.system.stats.speed.value;\nintValue = game.user.character.system.stats.intellect.value;\ncomValue = game.user.character.system.stats.combat.value;\nsanValue = game.user.character.system.stats.sanity.value;\nferValue = game.user.character.system.stats.fear.value;\nbodValue = game.user.character.system.stats.body.value;\n//set value to add\nmsgHeader = 'STRENGTH LOST';\nmsgImg = 'modules/fvtt_mosh_1e_psg/icons/attributes/body.png';\n//create value flavor text\nif (game.user.character.system.class.value === 'Android') {\n    msgFlavor = `Central partition damage detected. Unrecoverable sectors found.<br><br>`;\n} else {\n    msgFlavor = `You feel a part of yourself drift away.<br><br>`;\n}\n//create chat variables\nmsgOutcome = `All stats and saves decreased by <strong>1</strong>.`;\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n    <div class=\"rollweaponh1\">${msgHeader}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n    </div>\n    <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n    <div class=\"body\">\n    ${msgFlavor} ${msgOutcome}\n    </div>\n    </div>\n</div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});\n//update characters value level\ngame.user.character.update({'system.stats.strength.value': strValue-1});\ngame.user.character.update({'system.stats.speed.value': spdValue-1});\ngame.user.character.update({'system.stats.intellect.value': intValue-1});\ngame.user.character.update({'system.stats.combat.value': comValue-1});\ngame.user.character.update({'system.stats.sanity.value': sanValue-1});\ngame.user.character.update({'system.stats.fear.value': ferValue-1});\ngame.user.character.update({'system.stats.body.value': bodValue-1});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"3QR76myXuJeaczpK","name":"-1 Health","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//get attribute to compare against\ncurValue = game.user.character.system.health.value;\nminValue = game.user.character.system.health.min;\nmaxValue = game.user.character.system.health.max;\ncurWounds = game.user.character.system.hits.value;\nmaxWounds = game.user.character.system.hits.max;\n//set value to add\nmsgHeader = 'HEALTH LOST';\nmsgImg = 'modules/fvtt_mosh_1e_psg/icons/attributes/health.png';\nvalueMod = -1;\n//set new value level\nif (curValue + valueMod > maxValue) {\n    newValue = maxValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n    newWounds = curWounds;\n} else if (curValue + valueMod < minValue) {\n    newValue = minValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n} else {\n    newValue = curValue + valueMod;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n    newWounds = curWounds;\n}\n//create value flavor text\nif (game.user.character.system.class.value === 'Android') {\n    msgFlavor = `Your pain receptors indicate core damage.<br><br>`;\n} else {\n    msgFlavor = `You wince from the pain.<br><br>`;\n}\n//create chat variables\nif (valueMod > 0 && newValue === maxValue && valueDiff === 0) {\n    msgOutcome = `You are already at full health.`;\n} else if (valueMod > 0 && valueDiff > 0) {\n    msgOutcome = `Health increased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueMod < 0 && valueDiff < 0) {\n    msgOutcome = `Health decreased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueMod < 0 && valueDiff < 0 && newValue <= minValue) {\n    woundImpact = 1;\n    newWounds = curWounds + 1;\n    newValue = maxValue+actorImpact;\n    msgOutcome = `Health decreased by ${valueMod} points. You gain a wound and now have ${newValue} Health.<br><br>@Macro[Wound Check]{Make a Wound Check}`;\n} else if (valueMod < 0 && valueDiff < 0 && newValue <= minValue  && curWounds === maxWounds) {\n    woundImpact = 0;\n    newWounds = curWounds;\n    msgOutcome = `You are at death's door.<br><br>@Macro[Death Check]{Make a Death Check}`;\n}\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n    <div class=\"rollweaponh1\">${msgHeader}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n    </div>\n    <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n    <div class=\"body\">\n    ${msgFlavor} ${msgOutcome}\n    </div>\n    </div>\n</div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});\n//update characters value level\ngame.user.character.update({'system.health.value': newValue});\ngame.user.character.update({'system.hits.value': newWounds});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"XE4ywLcAt9kOoAJy","name":"-1 Maximum Wound","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//get attribute to compare against\ncurValue = game.user.character.system.hits.max;\nminValue = game.user.character.system.hits.min;\nmaxValue = game.user.character.system.hits.max;\n//set value to add\nmsgHeader = 'MAXIMUM HEALTH LOST';\nmsgImg = 'modules/fvtt_mosh_1e_psg/icons/macros/wound_check.png';\nvalueMod = -1;\n//set new value level\nif (curValue + valueMod > maxValue) {\n    newValue = maxValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n    newWounds = curWounds;\n} else if (curValue + valueMod < minValue) {\n    newValue = minValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n} else {\n    newValue = curValue + valueMod;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n    newWounds = curWounds;\n}\n//create value flavor text\nif (game.user.character.system.class.value === 'Android') {\n    msgFlavor = `Your pain receptors indicate permanent damage.<br><br>`;\n} else {\n    msgFlavor = `You scream out from immense pain.<br><br>`;\n}\n//create chat variables\nif (valueMod > 0 && newValue === maxValue && valueDiff === 0) {\n    msgOutcome = `You are already at Maximum Wounds.`;\n} else if (valueMod > 0 && valueDiff > 0) {\n    msgOutcome = `Maximum Wounds increased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueMod < 0 && valueDiff < 0) {\n    msgOutcome = `Maximum Wounds decreased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueMod < 0 && valueDiff < 0 && newValue < game.user.character.system.hits.value) {\n    msgOutcome = `You are at death's door.<br><br>@Macro[Death Check]{Make a Death Check}`;\n}\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n    <div class=\"rollweaponh1\">${msgHeader}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n    </div>\n    <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n    <div class=\"body\">\n    ${msgFlavor} ${msgOutcome}\n    </div>\n    </div>\n</div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});\n//update characters value level\ngame.user.character.update({'system.hits.max': newValue});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"aZsy3FZE4wFDSvS9","name":"-1d10 Health","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//get attribute to compare against\ncurValue = game.user.character.system.health.value;\nminValue = game.user.character.system.health.min;\nmaxValue = game.user.character.system.health.max;\ncurWounds = game.user.character.system.hits.value;\nmaxWounds = game.user.character.system.hits.max;\n//roll dice\nlet macroRoll = await new Roll(\"-1d10\").evaluate();\n//set stressmod\nvalueMod = macroRoll.total;\n//set value to add\nmsgHeader = 'HEALTH LOST';\nmsgImg = 'modules/fvtt_mosh_1e_psg/icons/attributes/health.png';\n//set new value level\nif (curValue + valueMod > maxValue) {\n    newValue = maxValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n    newWounds = curWounds;\n} else if (curValue + valueMod < minValue) {\n    newValue = minValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n} else {\n    newValue = curValue + valueMod;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n    newWounds = curWounds;\n}\n//update characters value level\ngame.user.character.update({'system.health.value': newValue});\ngame.user.character.update({'system.hits.value': newWounds});\n//create value flavor text\nif (game.user.character.system.class.value === 'Android') {\n    msgFlavor = `Your pain receptors indicate core damage.<br><br>`;\n} else {\n    msgFlavor = `You wince from the pain.<br><br>`;\n}\n//create chat variables\nif (valueMod > 0 && newValue === maxValue && valueDiff === 0) {\n    msgOutcome = `You are already at full health.`;\n} else if (valueMod > 0 && valueDiff > 0) {\n    msgOutcome = `Health increased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueMod < 0 && valueDiff < 0) {\n    msgOutcome = `Health decreased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueMod < 0 && valueDiff < 0 && newValue <= minValue) {\n    woundImpact = 1;\n    newWounds = curWounds + 1;\n    newValue = maxValue+actorImpact;\n    msgOutcome = `Health decreased by ${valueMod} points. You gain a wound and now have ${newValue} Health.<br><br>@Macro[Wound Check]{Make a Wound Check}`;\n} else if (valueMod < 0 && valueDiff < 0 && newValue <= minValue  && curWounds === maxWounds) {\n    woundImpact = 0;\n    newWounds = curWounds;\n    msgOutcome = `You are at death's door.<br><br>@Macro[Death Check]{Make a Death Check}`;\n}\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n    <div class=\"rollweaponh1\">${msgHeader}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n    </div>\n    <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n    <div class=\"body\">\n    ${msgFlavor} ${msgOutcome}\n    </div>\n    </div>\n</div>\n</div>\n`;\nchatId = randomID();\n//make message\nmacroMsg = await macroRoll.toMessage({\n  id: chatId,\n  user: game.user._id,\n  speaker: ChatMessage.getSpeaker({token: actor}),\n  content: macroResult\n},{keepId:true});\n//make dice\nawait game.dice3d.waitFor3DAnimationByMessageID(chatId);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"VxgaHaX4e88OdsNY","name":"-1d10 Strength","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//init vars\nplayerRoll = '-1d10';\n//get attribute to compare against\ncurValue = game.user.character.system.stats.strength.value;\n//roll dice\nlet macroRoll = await new Roll(playerRoll).evaluate();\n//set stressmod\nvalueMod = macroRoll.total;\n//set value to add\nmsgHeader = 'STRENGTH LOST';\nmsgImg = 'modules/fvtt_mosh_1e_psg/icons/attributes/strength.png';\n//set new value level\nnewValue = curValue + valueMod;\n//update characters value level\ngame.user.character.update({'system.stats.strength.value': newValue});\n//create value flavor text\nif (game.user.character.system.class.value === 'Android') {\n    msgFlavor = `Central partition damage detected. Unrecoverable sectors found.<br><br>`;\n} else {\n    msgFlavor = `You feel a part of yourself drift away.<br><br>`;\n}\n//create chat variables\nmsgOutcome = `Strength decreased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n    <div class=\"rollweaponh1\">${msgHeader}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n    </div>\n    <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n    <div class=\"body\">\n    ${msgFlavor} ${msgOutcome}\n    </div>\n    </div>\n</div>\n</div>\n`;\nchatId = randomID();\n//make message\nmacroMsg = await macroRoll.toMessage({\n  id: chatId,\n  user: game.user._id,\n  speaker: ChatMessage.getSpeaker({token: actor}),\n  content: macroResult\n},{keepId:true});\n//make dice\nawait game.dice3d.waitFor3DAnimationByMessageID(chatId);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"6SdbFzpL2hCFwNqt","name":"-1d10 Stress","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//get attribute to compare against\ncurValue = game.user.character.system.other.stress.value;\nminValue = game.user.character.system.other.stress.min;\nmaxValue = game.user.character.system.other.stress.max;\n//roll dice\nlet macroRoll = await new Roll(\"-1d10\").evaluate();\n//set stressmod\nvalueMod = macroRoll.total;\n//set value to add\nmsgHeader = 'STRESS RELIEVED';\nmsgImg = 'modules/fvtt_mosh_1e_psg/icons/macros/rest_save.png';\n//set new value level\nif (curValue + valueMod > maxValue) {\n    newValue = maxValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n} else if (curValue + valueMod < minValue) {\n    newValue = minValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n} else {\n    newValue = curValue + valueMod;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n}\n//update characters value level\ngame.user.character.update({'system.other.stress.value': newValue});\n//create value flavor text\nif (game.user.character.system.class.value === 'Android') {\n    msgFlavor = `You soft-reset, purging unnecessary background processes.<br><br>`;\n} else {\n    msgFlavor = `You feel a sense of calm wash over you.<br><br>`;\n}\n//create chat variables\nif (valueMod === 0) {\n    msgOutcome = `Frustratingly, you can't seem to relax. You still have a stress of <strong>${newStress}</strong>.`;\n} else if (valueMod < 0 && newValue === minValue && valueDiff === 0) {\n    msgOutcome = `You are already as calm as possible.`;\n} else if (valueDiff > 0 && actorImpact === 0) {\n    msgOutcome = `Stress increased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueDiff < 0 && actorImpact === 0) {\n    msgOutcome = `Stress decreased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueDiff > 0 && actorImpact > 0) {\n    msgOutcome = `You hit rock bottom. Stress increased from <strong>${curValue}</strong> to <strong>${newValue}</strong>. You must also <strong>reduce the most relevant Stat or Save by ${actorImpact}</strong>.`;\n} else if (valueDiff === 0 && actorImpact > 0) {\n    msgOutcome = `You feel a part of yourself drift away. <strong>Reduce the most relevant Stat or Save by ${actorImpact}</strong>.`;\n}\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n    <div class=\"rollweaponh1\">${msgHeader}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n    </div>\n    <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n    <div class=\"body\">\n    ${msgFlavor} ${msgOutcome}\n    </div>\n    </div>\n</div>\n</div>\n`;\nchatId = randomID();\n//make message\nmacroMsg = await macroRoll.toMessage({\n  id: chatId,\n  user: game.user._id,\n  speaker: ChatMessage.getSpeaker({token: actor}),\n  content: macroResult\n},{keepId:true});\n//make dice\nawait game.dice3d.waitFor3DAnimationByMessageID(chatId);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"ppz2dhinlO5xaMST","name":"-1d5 Maximum Health","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//get attribute to compare against\ncurValue = game.user.character.system.health.max;\nminValue = game.user.character.system.health.min;\nmaxValue = game.user.character.system.health.max;\n//set value to add\nmsgHeader = 'MAXIMUM HEALTH LOST';\nmsgImg = 'modules/fvtt_mosh_1e_psg/icons/attributes/health.png';\n//roll dice\nlet macroRoll = await new Roll(\"-1d5\").evaluate();\n//set stressmod\nvalueMod = macroRoll.total;\n//set new value level\nif (curValue + valueMod > maxValue) {\n    newValue = maxValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n    newWounds = curWounds;\n} else if (curValue + valueMod < minValue) {\n    newValue = minValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n} else {\n    newValue = curValue + valueMod;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n    newWounds = curWounds;\n}\n//create value flavor text\nif (game.user.character.system.class.value === 'Android') {\n    msgFlavor = `Your pain receptors indicate permanent damage.<br><br>`;\n} else {\n    msgFlavor = `You scream out from immense pain.<br><br>`;\n}\n//create chat variables\nif (valueMod > 0 && newValue === maxValue && valueDiff === 0) {\n    msgOutcome = `You are already at Maximum health.`;\n} else if (valueMod > 0 && valueDiff > 0) {\n    msgOutcome = `Maximum Health increased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueMod < 0 && valueDiff < 0) {\n    msgOutcome = `Maximum Health decreased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueMod < 0 && valueDiff < 0 && newValue <= minValue) {\n    msgOutcome = `You are at death's door.<br><br>@Macro[Death Check]{Make a Death Check}`;\n}\n//get attribute to compare against\ncurValue = game.user.character.system.health.max;\nminValue = game.user.character.system.health.min;\nmaxValue = game.user.character.system.health.max;\n//set value to add\nmsgHeader = 'MAXIMUM HEALTH LOST';\nmsgImg = 'modules/fvtt_mosh_1e_psg/icons/attributes/health.png';\n//roll dice\nlet macroRoll = await new Roll(\"-1d5\").evaluate();\n//set stressmod\nvalueMod = macroRoll.total;\n//set new value level\nif (curValue + valueMod > maxValue) {\n    newValue = maxValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n    newWounds = curWounds;\n} else if (curValue + valueMod < minValue) {\n    newValue = minValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n} else {\n    newValue = curValue + valueMod;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n    newWounds = curWounds;\n}\n//update characters value level\ngame.user.character.update({'system.health.max': newValue});\n//change current value if max is lower\nif (newValue < game.user.character.system.health.value) {\n    game.user.character.update({'system.health.value': newValue});\n}\n//create value flavor text\nif (game.user.character.system.class.value === 'Android') {\n    msgFlavor = `Your pain receptors indicate permanent damage.<br><br>`;\n} else {\n    msgFlavor = `You scream out from immense pain.<br><br>`;\n}\n//create chat variables\nif (valueMod > 0 && newValue === maxValue && valueDiff === 0) {\n    msgOutcome = `You are already at Maximum health.`;\n} else if (valueMod > 0 && valueDiff > 0) {\n    msgOutcome = `Maximum Health increased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueMod < 0 && valueDiff < 0) {\n    msgOutcome = `Maximum Health decreased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueMod < 0 && valueDiff < 0 && newValue <= minValue) {\n    msgOutcome = `You are at death's door.<br><br>@Macro[Death Check]{Make a Death Check}`;\n}\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n    <div class=\"rollweaponh1\">${msgHeader}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n    </div>\n    <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n    <div class=\"body\">\n    ${msgFlavor} ${msgOutcome}\n    </div>\n    </div>\n</div>\n</div>\n`;\nchatId = randomID();\n//make message\nmacroMsg = await macroRoll.toMessage({\n  id: chatId,\n  user: game.user._id,\n  speaker: ChatMessage.getSpeaker({token: actor}),\n  content: macroResult\n},{keepId:true});\n//make dice\nawait game.dice3d.waitFor3DAnimationByMessageID(chatId);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"ij1M1MIaaSzB0SYw","name":"-1d5 Stress","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//get attribute to compare against\ncurValue = game.user.character.system.other.stress.value;\nminValue = game.user.character.system.other.stress.min;\nmaxValue = game.user.character.system.other.stress.max;\n//roll dice\nlet macroRoll = await new Roll(\"-1d5\").evaluate();\n//set stressmod\nvalueMod = macroRoll.total;\n//set value to add\nmsgHeader = 'STRESS RELIEVED';\nmsgImg = 'modules/fvtt_mosh_1e_psg/icons/macros/rest_save.png';\n//set new value level\nif (curValue + valueMod > maxValue) {\n    newValue = maxValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n} else if (curValue + valueMod < minValue) {\n    newValue = minValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n} else {\n    newValue = curValue + valueMod;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n}\n//update characters value level\ngame.user.character.update({'system.other.stress.value': newValue});\n//create value flavor text\nif (game.user.character.system.class.value === 'Android') {\n    msgFlavor = `You soft-reset, purging unnecessary background processes.<br><br>`;\n} else {\n    msgFlavor = `You feel a sense of calm wash over you.<br><br>`;\n}\n//create chat variables\nif (valueMod === 0) {\n    msgOutcome = `Frustratingly, you can't seem to relax. You still have a stress of <strong>${newStress}</strong>.`;\n} else if (valueMod < 0 && newValue === minValue && valueDiff === 0) {\n    msgOutcome = `You are already as calm as possible.`;\n} else if (valueDiff > 0 && actorImpact === 0) {\n    msgOutcome = `Stress increased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueDiff < 0 && actorImpact === 0) {\n    msgOutcome = `Stress decreased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueDiff > 0 && actorImpact > 0) {\n    msgOutcome = `You hit rock bottom. Stress increased from <strong>${curValue}</strong> to <strong>${newValue}</strong>. You must also <strong>reduce the most relevant Stat or Save by ${actorImpact}</strong>.`;\n} else if (valueDiff === 0 && actorImpact > 0) {\n    msgOutcome = `You feel a part of yourself drift away. <strong>Reduce the most relevant Stat or Save by ${actorImpact}</strong>.`;\n}\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n    <div class=\"rollweaponh1\">${msgHeader}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n    </div>\n    <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n    <div class=\"body\">\n    ${msgFlavor} ${msgOutcome}\n    </div>\n    </div>\n</div>\n</div>\n`;\nchatId = randomID();\n//make message\nmacroMsg = await macroRoll.toMessage({\n  id: chatId,\n  user: game.user._id,\n  speaker: ChatMessage.getSpeaker({token: actor}),\n  content: macroResult\n},{keepId:true});\n//make dice\nawait game.dice3d.waitFor3DAnimationByMessageID(chatId);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"fVHHzPRsWYf0TD3D","name":"-2d10 Body Save","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//init vars\nplayerRoll = '-2d10';\n//get attribute to compare against\ncurValue = game.user.character.system.stats.body.value;\n//roll dice\nlet macroRoll = await new Roll(playerRoll).evaluate();\n//set stressmod\nvalueMod = macroRoll.total;\n//set value to add\nmsgHeader = 'STRENGTH LOST';\nmsgImg = 'modules/fvtt_mosh_1e_psg/icons/attributes/body.png';\n//set new value level\nnewValue = curValue + valueMod;\n//update characters value level\ngame.user.character.update({'system.stats.body.value': newValue});\n//create value flavor text\nif (game.user.character.system.class.value === 'Android') {\n    msgFlavor = `Central partition damage detected. Unrecoverable sectors found.<br><br>`;\n} else {\n    msgFlavor = `You feel a part of yourself drift away.<br><br>`;\n}\n//create chat variables\nmsgOutcome = `Body decreased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n    <div class=\"rollweaponh1\">${msgHeader}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n    </div>\n    <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n    <div class=\"body\">\n    ${msgFlavor} ${msgOutcome}\n    </div>\n    </div>\n</div>\n</div>\n`;\nchatId = randomID();\n//make message\nmacroMsg = await macroRoll.toMessage({\n  id: chatId,\n  user: game.user._id,\n  speaker: ChatMessage.getSpeaker({token: actor}),\n  content: macroResult\n},{keepId:true});\n//make dice\nawait game.dice3d.waitFor3DAnimationByMessageID(chatId);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"XRuLqx1ebWfFIs50","name":"Bleeding Wound +","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//init vars\nrollTable = 'Bleeding Wound';\nrollString = '1d10 [+]';\n//init vars\nrollAdvDis = rollString.includes(\"[\");\n//translate rollString into foundry roll string format\nif (rollAdvDis === true) {\n//extract dice needed\nrollDice = rollString.substr(0,rollString.indexOf(\"[\")).concat(',',rollString.substr(0,rollString.indexOf(\"[\")));\n//make adv/dis template\nrollTemplate = '{[diceSet]}';\n//make foundry roll string\nrollStringParsed = rollTemplate.replace(\"[diceSet]\",rollDice);\n} else {\nrollStringParsed = rollString;\n}\n//roll dice\nlet macroRoll = await new Roll(rollStringParsed).evaluate();\n//assign to vars + replace 10s with 0s\nif (rollAdvDis === true) {\n//get values\nrollA1 = macroRoll.dice[0].results[0].result;\nrollB1 = macroRoll.dice[1].results[0].result;\n//replace 10s\nif (rollA1 === 10) {rollA1 = 0;}\nif (rollB1 === 10) {rollB1 = 0;}\n} else {\n//get values\nrollA1 = macroRoll.dice[0].results[0].result;\n//replace 10s\nif (rollA1 === 10) {rollA1= 0;}\n}\n//choose best value based on Adv/Dis\nif (rollAdvDis === true) {\nif (rollString.includes(\"[+]\") === true) {\n    if(rollA1 < rollB1) { \n    finalRoll = rollA1;\n    } else {\n    finalRoll = rollB1;\n    }\n} else if (rollString.includes(\"[-]\") === true) {\n    if(rollA1 > rollB1) { \n    finalRoll = rollA1;\n    } else {\n    finalRoll = rollB1;\n    }\n}\n} else {\nfinalRoll = rollA1;\n}\n//get table result\ntableResult = game.tables.getName(rollTable).getResultsForRoll(finalRoll);\n//create chat message template\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom : 5px;\">\n    <div class=\"rollweaponh1\">${tableResult[0].parent.name}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${tableResult[0].img}\" title=\"${tableResult[0].parent.name}\" /></div>\n    </div>\n    <div class=\"description\" style=\"margin-bottom : 20px;\">${tableResult[0].text}</div>\n</div>\n</div>\n`;\n//make message ID\nchatId = randomID();\n//make message\nmacroMsg = await macroRoll.toMessage({\nid: chatId,\nuser: game.user._id,\nspeaker: ChatMessage.getSpeaker({token: actor}),\ncontent: macroResult\n},{keepId:true});\n//make dice\nawait game.dice3d.waitFor3DAnimationByMessageID(chatId);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"AnnzPdGaFekr72X7","name":"Blunt Force Wound +","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//init vars\nrollTable = 'Blunt Force Wound';\nrollString = '1d10 [+]';\n//init vars\nrollAdvDis = rollString.includes(\"[\");\n//translate rollString into foundry roll string format\nif (rollAdvDis === true) {\n//extract dice needed\nrollDice = rollString.substr(0,rollString.indexOf(\"[\")).concat(',',rollString.substr(0,rollString.indexOf(\"[\")));\n//make adv/dis template\nrollTemplate = '{[diceSet]}';\n//make foundry roll string\nrollStringParsed = rollTemplate.replace(\"[diceSet]\",rollDice);\n} else {\nrollStringParsed = rollString;\n}\n//roll dice\nlet macroRoll = await new Roll(rollStringParsed).evaluate();\n//assign to vars + replace 10s with 0s\nif (rollAdvDis === true) {\n//get values\nrollA1 = macroRoll.dice[0].results[0].result;\nrollB1 = macroRoll.dice[1].results[0].result;\n//replace 10s\nif (rollA1 === 10) {rollA1 = 0;}\nif (rollB1 === 10) {rollB1 = 0;}\n} else {\n//get values\nrollA1 = macroRoll.dice[0].results[0].result;\n//replace 10s\nif (rollA1 === 10) {rollA1= 0;}\n}\n//choose best value based on Adv/Dis\nif (rollAdvDis === true) {\nif (rollString.includes(\"[+]\") === true) {\n    if(rollA1 < rollB1) { \n    finalRoll = rollA1;\n    } else {\n    finalRoll = rollB1;\n    }\n} else if (rollString.includes(\"[-]\") === true) {\n    if(rollA1 > rollB1) { \n    finalRoll = rollA1;\n    } else {\n    finalRoll = rollB1;\n    }\n}\n} else {\nfinalRoll = rollA1;\n}\n//get table result\ntableResult = game.tables.getName(rollTable).getResultsForRoll(finalRoll);\n//create chat message template\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom : 5px;\">\n    <div class=\"rollweaponh1\">${tableResult[0].parent.name}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${tableResult[0].img}\" title=\"${tableResult[0].parent.name}\" /></div>\n    </div>\n    <div class=\"description\" style=\"margin-bottom : 20px;\">${tableResult[0].text}</div>\n</div>\n</div>\n`;\n//make message ID\nchatId = randomID();\n//make message\nmacroMsg = await macroRoll.toMessage({\nid: chatId,\nuser: game.user._id,\nspeaker: ChatMessage.getSpeaker({token: actor}),\ncontent: macroResult\n},{keepId:true});\n//make dice\nawait game.dice3d.waitFor3DAnimationByMessageID(chatId);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"DFoyjfZY4GXrN0Xa","name":"Body Save","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//init vars\nplayerStat = 'body';\nplayerRoll = '1d100';\n\n//main roll function\nasync function rollCheck(addSkill,addPoints,rollStat,rollString) {\n  //init vars\n  rollAdvDis = rollString.includes(\"[\");\n  //translate rollString into foundry roll string format\n  if (rollAdvDis === true) {\n    //extract dice needed\n    rollDice = rollString.substr(0,rollString.indexOf(\"[\")).concat(',',rollString.substr(0,rollString.indexOf(\"[\")));\n    //make adv/dis template\n    rollTemplate = '{[diceSet]}';\n    //make foundry roll string\n    rollStringParsed = rollTemplate.replace(\"[diceSet]\",rollDice);\n  } else {\n    rollStringParsed = rollString;\n  }\n  //roll dice\n  let macroRoll = await new Roll(rollStringParsed).evaluate();\n  //assign to vars + replace 100s with 0s\n  if (rollAdvDis === true) {\n    //get values\n    rollA1 = macroRoll.dice[0].results[0].result;\n    rollB1 = macroRoll.dice[1].results[0].result;\n    //replace 10s\n    if (rollA1 === 100) {rollA1 = 0;}\n    if (rollB1 === 100) {rollB1 = 0;}\n  } else {\n    //get values\n    rollA1 = macroRoll.dice[0].results[0].result;\n    //replace 10s\n    if (rollA1 === 100) {rollA1= 0;}\n  }\n  //choose best value based on Adv/Dis\n  if (rollAdvDis === true) {\n    if (rollString.includes(\"[+]\") === true) {\n      if(rollA1 < rollB1) { \n        finalRoll = rollA1;\n      } else {\n        finalRoll = rollB1;\n      }\n    } else if (rollString.includes(\"[-]\") === true) {\n      if(rollA1 > rollB1) { \n        finalRoll = rollA1;\n      } else {\n        finalRoll = rollB1;\n      }\n    }\n  } else {\n    finalRoll = rollA1;\n  }\n    //get stress\n    let curStress = game.user.character.system.other.stress.value;\n    //define vars\n    let statName = '';\n    let msgHeader = '';\n    let statValue = 0;\n    //get the value for the chosen stat\n    if (rollStat === `strength`) {\n      statName = `Strength`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.strength.value + game.user.character.system.stats.strength.mod;\n    } else if (rollStat === `speed`) {\n      statName = `Speed`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.speed.value + game.user.character.system.stats.speed.mod;\n    } else if (rollStat === `intellect`) {\n      statName = `Intellect`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.intellect.value + game.user.character.system.stats.intellect.mod;\n    } else if (rollStat === `combat`) {\n      statName = `Combat`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.combat.value + game.user.character.system.stats.combat.mod;\n    } else if (rollStat === `sanity`) {\n      statName = `Sanity`\n      msgHeader = rollStat + ` save`;\n      statValue = game.user.character.system.stats.sanity.value;\n    } else if (rollStat === `fear`) {\n      statName = `Fear`\n      msgHeader = rollStat + ` save`;\n      statValue = game.user.character.system.stats.fear.value;\n    } else if (rollStat === `body`) {\n      statName = `Body`\n      msgHeader = rollStat + ` save`;\n      statValue = game.user.character.system.stats.body.value;\n    }\n    //set addPoints to zero if null\n    if(addPoints === undefined) {addPoints = 0}\n    //set roll info\n    let overUnder = `<i class=\"fas fa-angle-left\"></i>`;\n    let target = statValue + Number(addPoints);\n    //prepare list of critical rolls\n    let doubles = new Set([0, 11, 22, 33, 44, 55, 66, 77, 88, 99]);\n    //define vars\n    let critical = '';\n    //check for crit\n    if (doubles.has(finalRoll) === true) {\n      critical = \"CRITICAL \";\n    } else {\n      critical = \"\";\n    }\n    //define vars\n    let outcome = '';\n    let position = '';\n    //set result variables\n    if (finalRoll >= 90) {\n      outcome = \"FAILURE\";\n      position = 'higher';\n    } else if (finalRoll < target) {\n      outcome = \"SUCCESS\";\n      position = 'lower';\n    } else {\n      outcome = \"FAILURE\";\n      position = 'higher';\n    }\n    //define vars\n    let stressMod = 0;\n    //set stress mod\n    if (outcome === \"FAILURE\") {\n      stressMod = 1;\n    } else {\n      stressMod = 0;\n    }\n    //define vars\n    let newStress = 0;\n    let stressDiff = 0;\n    let saveImpact = 0;\n    //set new stress level\n    if (curStress + stressMod > 20) {\n      newStress = 20;\n      stressDiff = newStress - curStress;\n      saveImpact = stressMod - stressDiff;\n    } else if (curStress + stressMod < 2) {\n      newStress = 2;\n      stressDiff = newStress - curStress;\n      saveImpact = stressMod - stressDiff;\n    } else {\n      newStress = curStress + stressMod;\n      stressDiff = newStress - curStress;\n      saveImpact = stressMod - stressDiff;\n    }\n    //update characters stress level\n    game.user.character.update({'system.other.stress.value': newStress});\n    //define vars\n    let msgFlavor = '';\n    //create stress flavor text\n    if (addPoints > 0) {\n      msgFlavor = `\n      <div style=\"font-size: 1.1rem; margin-top : -10px; margin-bottom : 5px;\">\n        <strong>${critical}${outcome}!</strong>\n      </div>\n      You rolled ${position} than your <strong>${statName}</strong> plus <strong>${addSkill}</strong> skill bonus.<br>\n      `;\n    } else {\n      msgFlavor = `\n      <div style=\"font-size: 1.1rem; margin-top : -10px; margin-bottom : 5px;\">\n        <strong>${critical}${outcome}!</strong>\n      </div>\n      You rolled ${position} than your <strong>${statName}</strong>.<br>\n      `;\n    }\n    //define vars\n    let msgOutcome = '';\n    //create chat variables\n    if (outcome === \"SUCCESS\") {\n      msgOutcome = `You gain some confidence in your skills.`;    \n    } else if (outcome === \"FAILURE\" && stressMod > 0 && newStress === 20 && stressDiff > 0) {\n      msgOutcome = `You hit rock bottom. Stress increased from <strong>${curStress}</strong> to <strong>${newStress}</strong>. You must also <strong>reduce the most relevant Stat or Save by ${saveImpact}</strong>.`;\n    } else if (outcome === \"FAILURE\" && stressMod > 0 && newStress === 20 && stressDiff === 0) {\n      msgOutcome = `You feel a part of yourself drift away. <strong>Reduce the most relevant Stat or Save by ${saveImpact}</strong>.`;\n    } else {\n      msgOutcome = `Stress increased from <strong>${curStress}</strong> to <strong>${newStress}</strong>.`;\n    }\n    //define vars\n    let results_critfail = '';\n    //create message if crit fail\n    if (critical === \"CRITICAL \" && outcome === \"FAILURE\") {\n      results_critfail = `<br><br>@Macro[Panic Check]{Make a Panic Check}`;\n    } else {\n      results_critfail = ``;\n    }\n    //create chat message template\n    let macroResult = `\n    <div class=\"mosh\">\n      <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom : 5px;\">\n          <div class=\"rollweaponh1\">${msgHeader}</div>\n          <div style=\"text-align: right\"><img class=\"roll-image\" src=\"modules/fvtt_mosh_1e_psg/icons/attributes/${rollStat}.png\" /></div>\n        </div>\n        <div class=\"description\" style=\"margin-bottom: 10px;\">\n        <div class=\"body\">${msgFlavor}</div>\n      </div>\n      <div class=\"dice-roll\" style=\"margin-bottom: 10px;\">\n        <div class=\"dice-result\">\n          <div class=\"dice-formula\">${rollString} ${overUnder} ${target}</div>\n          <h4 class=\"dice-total\">${finalRoll}</h4>\n        </div>\n      </div>\n      <div class=\"description\" style=\"margin-bottom: 20px;\">${msgOutcome}${results_critfail}</div>\n      </div>\n    </div>\n    `;\n    //make message ID\n    let chatId = randomID();\n    //make message\n    let macroMsg = await macroRoll.toMessage({\n      id: chatId,\n      user: game.user._id,\n      speaker: {\n          actor: this.id,\n          token: this.token,\n          alias: this.name\n      },\n      content: macroResult\n    },{keepId:true});\n    //make dice\n    await game.dice3d.waitFor3DAnimationByMessageID(chatId);\n}\n\n//get list of player skills\nconst playerItems = game.user.character.items;\n//create header for skill list\nconst skillHeader = `\n<style>\n.macro_window{\n    background: rgb(230,230,230);\n    border-radius: 9px;\n}\n.macro_img{\n    display: flex;\n    justify-content: center; //do I need this\n}\n.macro_desc{\n    font-family: \"Roboto\", sans-serif;\n    font-size: 10.5pt;\n    font-weight: 400;\n    padding-left: 8px;\n    padding-top: 8px;\n    padding-right: 8px;\n    padding-bottom: 8px;\n}\n.grid-2col {\n    display: grid;\n    grid-column: span 2 / span 2;\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n    gap: 2px;\n    padding: 0;\n}\n</style>\n\n<div class =\"macro_window\" style=\"margin-bottom : 7px;\">\n    <div class=\"macro_desc\"><h3>Add a Skill?</h3>If you have a Skill that is relevant to the task at hand, you can add the Skill’s bonus to your Stat or Save before making your roll <em>(giving you a higher number to roll under)</em>.</div>    \n</div>`;\n//create footer for skill list\nconst skillFooter = `<h4>Select your roll type:</h4>`;\n//create template for skill row\nconst skillRow = `\n<label for=\"[RADIO_ID]\">\n<div class =\"macro_window\" style=\"margin-bottom : 7px; vertical-align: middle; padding-left: 3px;\">\n    <div class=\"grid grid-3col\" style=\"grid-template-columns: 20px 60px auto\">\n    <input type=\"radio\" id=\"[RADIO_ID]\" name=\"skill\" value=\"[RADIO_VALUE]\">\n    <div class=\"macro_img\" style=\"padding-top: 5px; padding-left: 0px; padding-right: 0px; padding-bottom: 5px;\"><img src=\"[RADIO_IMG]\" style=\"border:none\"/></div>\n    <div class=\"macro_desc\" style=\"display: table;\">\n        <span style=\"display: table-cell; vertical-align: middle;\">\n        [RADIO_DESC]\n        </span>\n    </div>    \n    </div>\n</div>\n</label>`;\n//create skillList string\nlet skillList = ``;\n//create skill counter\nlet skillCount = 0;\n//create dialog pixel counter\nlet dialogHeight = 192;\n//loop through and create skill rows\nfor (let item of playerItems) {\n    //check if this is a skill\n    if (item.type === \"skill\") {\n        //set temprow as template\n        let tempRow = skillRow;\n        //replace ID\n        tempRow = tempRow.replaceAll(\"[RADIO_ID]\",item.name);\n        //replace value\n        tempRow = tempRow.replace(\"[RADIO_VALUE]\",item.system.bonus);\n        //replace img\n        tempRow = tempRow.replace(\"[RADIO_IMG]\",item.img);\n        //replace desc\n        tempRow = tempRow.replace(\"[RADIO_DESC]\",item.system.description.replace(\"<p>\",\"<p><strong>\"+item.name+\":</strong> \"));\n        //add to skillList\n        skillList = skillList + tempRow;\n        //increment skill count\n        skillCount++;\n        //increment pixel counter\n        dialogHeight = dialogHeight + 77;\n    }\n} \n//make content string\nconst skillHtml = skillHeader + skillList + skillFooter;\n//make window setting\ndlgTitle = '';\nif (playerStat === 'sanity' || playerStat === 'fear' || playerStat === 'body') {\n    dlgTitle = `Save`;\n} else {\n    dlgTitle = `Stat Check`;\n}\n//Select the stat of the roll.\nnew Dialog({\n    title: dlgTitle,\n    content: skillHtml,\n    buttons: {\n        button1: {\n            label: `Next`,\n            callback: (html) => rollCheck(html.find(\"input[name='skill']:checked\").attr(\"id\"),html.find(\"input[name='skill']:checked\").attr(\"value\"),playerStat,playerRoll),\n            icon: `<i class=\"fas fa-chevron-circle-right\"></i>`\n        }\n    }\n},{width: 600,height: dialogHeight}).render(true);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"30N3GrN5iBMzG9YM","name":"Fear Save","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//init vars\nplayerStat = 'fear';\nplayerRoll = '1d100';\n\n//main roll function\nasync function rollCheck(addSkill,addPoints,rollStat,rollString) {\n  //init vars\n  rollAdvDis = rollString.includes(\"[\");\n  //translate rollString into foundry roll string format\n  if (rollAdvDis === true) {\n    //extract dice needed\n    rollDice = rollString.substr(0,rollString.indexOf(\"[\")).concat(',',rollString.substr(0,rollString.indexOf(\"[\")));\n    //make adv/dis template\n    rollTemplate = '{[diceSet]}';\n    //make foundry roll string\n    rollStringParsed = rollTemplate.replace(\"[diceSet]\",rollDice);\n  } else {\n    rollStringParsed = rollString;\n  }\n  //roll dice\n  let macroRoll = await new Roll(rollStringParsed).evaluate();\n  //assign to vars + replace 100s with 0s\n  if (rollAdvDis === true) {\n    //get values\n    rollA1 = macroRoll.dice[0].results[0].result;\n    rollB1 = macroRoll.dice[1].results[0].result;\n    //replace 10s\n    if (rollA1 === 100) {rollA1 = 0;}\n    if (rollB1 === 100) {rollB1 = 0;}\n  } else {\n    //get values\n    rollA1 = macroRoll.dice[0].results[0].result;\n    //replace 10s\n    if (rollA1 === 100) {rollA1= 0;}\n  }\n  //choose best value based on Adv/Dis\n  if (rollAdvDis === true) {\n    if (rollString.includes(\"[+]\") === true) {\n      if(rollA1 < rollB1) { \n        finalRoll = rollA1;\n      } else {\n        finalRoll = rollB1;\n      }\n    } else if (rollString.includes(\"[-]\") === true) {\n      if(rollA1 > rollB1) { \n        finalRoll = rollA1;\n      } else {\n        finalRoll = rollB1;\n      }\n    }\n  } else {\n    finalRoll = rollA1;\n  }\n    //get stress\n    let curStress = game.user.character.system.other.stress.value;\n    //define vars\n    let statName = '';\n    let msgHeader = '';\n    let statValue = 0;\n    //get the value for the chosen stat\n    if (rollStat === `strength`) {\n      statName = `Strength`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.strength.value + game.user.character.system.stats.strength.mod;\n    } else if (rollStat === `speed`) {\n      statName = `Speed`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.speed.value + game.user.character.system.stats.speed.mod;\n    } else if (rollStat === `intellect`) {\n      statName = `Intellect`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.intellect.value + game.user.character.system.stats.intellect.mod;\n    } else if (rollStat === `combat`) {\n      statName = `Combat`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.combat.value + game.user.character.system.stats.combat.mod;\n    } else if (rollStat === `sanity`) {\n      statName = `Sanity`\n      msgHeader = rollStat + ` save`;\n      statValue = game.user.character.system.stats.sanity.value;\n    } else if (rollStat === `fear`) {\n      statName = `Fear`\n      msgHeader = rollStat + ` save`;\n      statValue = game.user.character.system.stats.fear.value;\n    } else if (rollStat === `body`) {\n      statName = `Body`\n      msgHeader = rollStat + ` save`;\n      statValue = game.user.character.system.stats.body.value;\n    }\n    //set addPoints to zero if null\n    if(addPoints === undefined) {addPoints = 0}\n    //set roll info\n    let overUnder = `<i class=\"fas fa-angle-left\"></i>`;\n    let target = statValue + Number(addPoints);\n    //prepare list of critical rolls\n    let doubles = new Set([0, 11, 22, 33, 44, 55, 66, 77, 88, 99]);\n    //define vars\n    let critical = '';\n    //check for crit\n    if (doubles.has(finalRoll) === true) {\n      critical = \"CRITICAL \";\n    } else {\n      critical = \"\";\n    }\n    //define vars\n    let outcome = '';\n    let position = '';\n    //set result variables\n    if (finalRoll >= 90) {\n      outcome = \"FAILURE\";\n      position = 'higher';\n    } else if (finalRoll < target) {\n      outcome = \"SUCCESS\";\n      position = 'lower';\n    } else {\n      outcome = \"FAILURE\";\n      position = 'higher';\n    }\n    //define vars\n    let stressMod = 0;\n    //set stress mod\n    if (outcome === \"FAILURE\") {\n      stressMod = 1;\n    } else {\n      stressMod = 0;\n    }\n    //define vars\n    let newStress = 0;\n    let stressDiff = 0;\n    let saveImpact = 0;\n    //set new stress level\n    if (curStress + stressMod > 20) {\n      newStress = 20;\n      stressDiff = newStress - curStress;\n      saveImpact = stressMod - stressDiff;\n    } else if (curStress + stressMod < 2) {\n      newStress = 2;\n      stressDiff = newStress - curStress;\n      saveImpact = stressMod - stressDiff;\n    } else {\n      newStress = curStress + stressMod;\n      stressDiff = newStress - curStress;\n      saveImpact = stressMod - stressDiff;\n    }\n    //update characters stress level\n    game.user.character.update({'system.other.stress.value': newStress});\n    //define vars\n    let msgFlavor = '';\n    //create stress flavor text\n    if (addPoints > 0) {\n      msgFlavor = `\n      <div style=\"font-size: 1.1rem; margin-top : -10px; margin-bottom : 5px;\">\n        <strong>${critical}${outcome}!</strong>\n      </div>\n      You rolled ${position} than your <strong>${statName}</strong> plus <strong>${addSkill}</strong> skill bonus.<br>\n      `;\n    } else {\n      msgFlavor = `\n      <div style=\"font-size: 1.1rem; margin-top : -10px; margin-bottom : 5px;\">\n        <strong>${critical}${outcome}!</strong>\n      </div>\n      You rolled ${position} than your <strong>${statName}</strong>.<br>\n      `;\n    }\n    //define vars\n    let msgOutcome = '';\n    //create chat variables\n    if (outcome === \"SUCCESS\") {\n      msgOutcome = `You gain some confidence in your skills.`;    \n    } else if (outcome === \"FAILURE\" && stressMod > 0 && newStress === 20 && stressDiff > 0) {\n      msgOutcome = `You hit rock bottom. Stress increased from <strong>${curStress}</strong> to <strong>${newStress}</strong>. You must also <strong>reduce the most relevant Stat or Save by ${saveImpact}</strong>.`;\n    } else if (outcome === \"FAILURE\" && stressMod > 0 && newStress === 20 && stressDiff === 0) {\n      msgOutcome = `You feel a part of yourself drift away. <strong>Reduce the most relevant Stat or Save by ${saveImpact}</strong>.`;\n    } else {\n      msgOutcome = `Stress increased from <strong>${curStress}</strong> to <strong>${newStress}</strong>.`;\n    }\n    //define vars\n    let results_critfail = '';\n    //create message if crit fail\n    if (critical === \"CRITICAL \" && outcome === \"FAILURE\") {\n      results_critfail = `<br><br>@Macro[Panic Check]{Make a Panic Check}`;\n    } else {\n      results_critfail = ``;\n    }\n    //create chat message template\n    let macroResult = `\n    <div class=\"mosh\">\n      <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom : 5px;\">\n          <div class=\"rollweaponh1\">${msgHeader}</div>\n          <div style=\"text-align: right\"><img class=\"roll-image\" src=\"modules/fvtt_mosh_1e_psg/icons/attributes/${rollStat}.png\" /></div>\n        </div>\n        <div class=\"description\" style=\"margin-bottom: 10px;\">\n        <div class=\"body\">${msgFlavor}</div>\n      </div>\n      <div class=\"dice-roll\" style=\"margin-bottom: 10px;\">\n        <div class=\"dice-result\">\n          <div class=\"dice-formula\">${rollString} ${overUnder} ${target}</div>\n          <h4 class=\"dice-total\">${finalRoll}</h4>\n        </div>\n      </div>\n      <div class=\"description\" style=\"margin-bottom: 20px;\">${msgOutcome}${results_critfail}</div>\n      </div>\n    </div>\n    `;\n    //make message ID\n    let chatId = randomID();\n    //make message\n    let macroMsg = await macroRoll.toMessage({\n      id: chatId,\n      user: game.user._id,\n      speaker: {\n          actor: this.id,\n          token: this.token,\n          alias: this.name\n      },\n      content: macroResult\n    },{keepId:true});\n    //make dice\n    await game.dice3d.waitFor3DAnimationByMessageID(chatId);\n}\n\n//get list of player skills\nconst playerItems = game.user.character.items;\n//create header for skill list\nconst skillHeader = `\n<style>\n.macro_window{\n    background: rgb(230,230,230);\n    border-radius: 9px;\n}\n.macro_img{\n    display: flex;\n    justify-content: center; //do I need this\n}\n.macro_desc{\n    font-family: \"Roboto\", sans-serif;\n    font-size: 10.5pt;\n    font-weight: 400;\n    padding-left: 8px;\n    padding-top: 8px;\n    padding-right: 8px;\n    padding-bottom: 8px;\n}\n.grid-2col {\n    display: grid;\n    grid-column: span 2 / span 2;\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n    gap: 2px;\n    padding: 0;\n}\n</style>\n\n<div class =\"macro_window\" style=\"margin-bottom : 7px;\">\n    <div class=\"macro_desc\"><h3>Add a Skill?</h3>If you have a Skill that is relevant to the task at hand, you can add the Skill’s bonus to your Stat or Save before making your roll <em>(giving you a higher number to roll under)</em>.</div>    \n</div>`;\n//create footer for skill list\nconst skillFooter = `<h4>Select your roll type:</h4>`;\n//create template for skill row\nconst skillRow = `\n<label for=\"[RADIO_ID]\">\n<div class =\"macro_window\" style=\"margin-bottom : 7px; vertical-align: middle; padding-left: 3px;\">\n    <div class=\"grid grid-3col\" style=\"grid-template-columns: 20px 60px auto\">\n    <input type=\"radio\" id=\"[RADIO_ID]\" name=\"skill\" value=\"[RADIO_VALUE]\">\n    <div class=\"macro_img\" style=\"padding-top: 5px; padding-left: 0px; padding-right: 0px; padding-bottom: 5px;\"><img src=\"[RADIO_IMG]\" style=\"border:none\"/></div>\n    <div class=\"macro_desc\" style=\"display: table;\">\n        <span style=\"display: table-cell; vertical-align: middle;\">\n        [RADIO_DESC]\n        </span>\n    </div>    \n    </div>\n</div>\n</label>`;\n//create skillList string\nlet skillList = ``;\n//create skill counter\nlet skillCount = 0;\n//create dialog pixel counter\nlet dialogHeight = 192;\n//loop through and create skill rows\nfor (let item of playerItems) {\n    //check if this is a skill\n    if (item.type === \"skill\") {\n        //set temprow as template\n        let tempRow = skillRow;\n        //replace ID\n        tempRow = tempRow.replaceAll(\"[RADIO_ID]\",item.name);\n        //replace value\n        tempRow = tempRow.replace(\"[RADIO_VALUE]\",item.system.bonus);\n        //replace img\n        tempRow = tempRow.replace(\"[RADIO_IMG]\",item.img);\n        //replace desc\n        tempRow = tempRow.replace(\"[RADIO_DESC]\",item.system.description.replace(\"<p>\",\"<p><strong>\"+item.name+\":</strong> \"));\n        //add to skillList\n        skillList = skillList + tempRow;\n        //increment skill count\n        skillCount++;\n        //increment pixel counter\n        dialogHeight = dialogHeight + 77;\n    }\n} \n//make content string\nconst skillHtml = skillHeader + skillList + skillFooter;\n//make window setting\ndlgTitle = '';\nif (playerStat === 'sanity' || playerStat === 'fear' || playerStat === 'body') {\n    dlgTitle = `Save`;\n} else {\n    dlgTitle = `Stat Check`;\n}\n//Select the stat of the roll.\nnew Dialog({\n    title: dlgTitle,\n    content: skillHtml,\n    buttons: {\n        button1: {\n            label: `Next`,\n            callback: (html) => rollCheck(html.find(\"input[name='skill']:checked\").attr(\"id\"),html.find(\"input[name='skill']:checked\").attr(\"value\"),playerStat,playerRoll),\n            icon: `<i class=\"fas fa-chevron-circle-right\"></i>`\n        }\n    }\n},{width: 600,height: dialogHeight}).render(true);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"G3zMNrmkzkxQnldO","name":"Fear Save -","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//init vars\nplayerStat = 'fear';\nplayerRoll = '1d100 [-]';\n\n//main roll function\nasync function rollCheck(addSkill,addPoints,rollStat,rollString) {\n  //init vars\n  rollAdvDis = rollString.includes(\"[\");\n  //translate rollString into foundry roll string format\n  if (rollAdvDis === true) {\n    //extract dice needed\n    rollDice = rollString.substr(0,rollString.indexOf(\"[\")).concat(',',rollString.substr(0,rollString.indexOf(\"[\")));\n    //make adv/dis template\n    rollTemplate = '{[diceSet]}';\n    //make foundry roll string\n    rollStringParsed = rollTemplate.replace(\"[diceSet]\",rollDice);\n  } else {\n    rollStringParsed = rollString;\n  }\n  //roll dice\n  let macroRoll = await new Roll(rollStringParsed).evaluate();\n  //assign to vars + replace 100s with 0s\n  if (rollAdvDis === true) {\n    //get values\n    rollA1 = macroRoll.dice[0].results[0].result;\n    rollB1 = macroRoll.dice[1].results[0].result;\n    //replace 10s\n    if (rollA1 === 100) {rollA1 = 0;}\n    if (rollB1 === 100) {rollB1 = 0;}\n  } else {\n    //get values\n    rollA1 = macroRoll.dice[0].results[0].result;\n    //replace 10s\n    if (rollA1 === 100) {rollA1= 0;}\n  }\n  //choose best value based on Adv/Dis\n  if (rollAdvDis === true) {\n    if (rollString.includes(\"[+]\") === true) {\n      if(rollA1 < rollB1) { \n        finalRoll = rollA1;\n      } else {\n        finalRoll = rollB1;\n      }\n    } else if (rollString.includes(\"[-]\") === true) {\n      if(rollA1 > rollB1) { \n        finalRoll = rollA1;\n      } else {\n        finalRoll = rollB1;\n      }\n    }\n  } else {\n    finalRoll = rollA1;\n  }\n    //get stress\n    let curStress = game.user.character.system.other.stress.value;\n    //define vars\n    let statName = '';\n    let msgHeader = '';\n    let statValue = 0;\n    //get the value for the chosen stat\n    if (rollStat === `strength`) {\n      statName = `Strength`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.strength.value + game.user.character.system.stats.strength.mod;\n    } else if (rollStat === `speed`) {\n      statName = `Speed`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.speed.value + game.user.character.system.stats.speed.mod;\n    } else if (rollStat === `intellect`) {\n      statName = `Intellect`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.intellect.value + game.user.character.system.stats.intellect.mod;\n    } else if (rollStat === `combat`) {\n      statName = `Combat`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.combat.value + game.user.character.system.stats.combat.mod;\n    } else if (rollStat === `sanity`) {\n      statName = `Sanity`\n      msgHeader = rollStat + ` save`;\n      statValue = game.user.character.system.stats.sanity.value;\n    } else if (rollStat === `fear`) {\n      statName = `Fear`\n      msgHeader = rollStat + ` save`;\n      statValue = game.user.character.system.stats.fear.value;\n    } else if (rollStat === `body`) {\n      statName = `Body`\n      msgHeader = rollStat + ` save`;\n      statValue = game.user.character.system.stats.body.value;\n    }\n    //set addPoints to zero if null\n    if(addPoints === undefined) {addPoints = 0}\n    //set roll info\n    let overUnder = `<i class=\"fas fa-angle-left\"></i>`;\n    let target = statValue + Number(addPoints);\n    //prepare list of critical rolls\n    let doubles = new Set([0, 11, 22, 33, 44, 55, 66, 77, 88, 99]);\n    //define vars\n    let critical = '';\n    //check for crit\n    if (doubles.has(finalRoll) === true) {\n      critical = \"CRITICAL \";\n    } else {\n      critical = \"\";\n    }\n    //define vars\n    let outcome = '';\n    let position = '';\n    //set result variables\n    if (finalRoll >= 90) {\n      outcome = \"FAILURE\";\n      position = 'higher';\n    } else if (finalRoll < target) {\n      outcome = \"SUCCESS\";\n      position = 'lower';\n    } else {\n      outcome = \"FAILURE\";\n      position = 'higher';\n    }\n    //define vars\n    let stressMod = 0;\n    //set stress mod\n    if (outcome === \"FAILURE\") {\n      stressMod = 1;\n    } else {\n      stressMod = 0;\n    }\n    //define vars\n    let newStress = 0;\n    let stressDiff = 0;\n    let saveImpact = 0;\n    //set new stress level\n    if (curStress + stressMod > 20) {\n      newStress = 20;\n      stressDiff = newStress - curStress;\n      saveImpact = stressMod - stressDiff;\n    } else if (curStress + stressMod < 2) {\n      newStress = 2;\n      stressDiff = newStress - curStress;\n      saveImpact = stressMod - stressDiff;\n    } else {\n      newStress = curStress + stressMod;\n      stressDiff = newStress - curStress;\n      saveImpact = stressMod - stressDiff;\n    }\n    //update characters stress level\n    game.user.character.update({'system.other.stress.value': newStress});\n    //define vars\n    let msgFlavor = '';\n    //create stress flavor text\n    if (addPoints > 0) {\n      msgFlavor = `\n      <div style=\"font-size: 1.1rem; margin-top : -10px; margin-bottom : 5px;\">\n        <strong>${critical}${outcome}!</strong>\n      </div>\n      You rolled ${position} than your <strong>${statName}</strong> plus <strong>${addSkill}</strong> skill bonus.<br>\n      `;\n    } else {\n      msgFlavor = `\n      <div style=\"font-size: 1.1rem; margin-top : -10px; margin-bottom : 5px;\">\n        <strong>${critical}${outcome}!</strong>\n      </div>\n      You rolled ${position} than your <strong>${statName}</strong>.<br>\n      `;\n    }\n    //define vars\n    let msgOutcome = '';\n    //create chat variables\n    if (outcome === \"SUCCESS\") {\n      msgOutcome = `You gain some confidence in your skills.`;    \n    } else if (outcome === \"FAILURE\" && stressMod > 0 && newStress === 20 && stressDiff > 0) {\n      msgOutcome = `You hit rock bottom. Stress increased from <strong>${curStress}</strong> to <strong>${newStress}</strong>. You must also <strong>reduce the most relevant Stat or Save by ${saveImpact}</strong>.`;\n    } else if (outcome === \"FAILURE\" && stressMod > 0 && newStress === 20 && stressDiff === 0) {\n      msgOutcome = `You feel a part of yourself drift away. <strong>Reduce the most relevant Stat or Save by ${saveImpact}</strong>.`;\n    } else {\n      msgOutcome = `Stress increased from <strong>${curStress}</strong> to <strong>${newStress}</strong>.`;\n    }\n    //define vars\n    let results_critfail = '';\n    //create message if crit fail\n    if (critical === \"CRITICAL \" && outcome === \"FAILURE\") {\n      results_critfail = `<br><br>@Macro[Panic Check]{Make a Panic Check}`;\n    } else {\n      results_critfail = ``;\n    }\n    //create chat message template\n    let macroResult = `\n    <div class=\"mosh\">\n      <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom : 5px;\">\n          <div class=\"rollweaponh1\">${msgHeader}</div>\n          <div style=\"text-align: right\"><img class=\"roll-image\" src=\"modules/fvtt_mosh_1e_psg/icons/attributes/${rollStat}.png\" /></div>\n        </div>\n        <div class=\"description\" style=\"margin-bottom: 10px;\">\n        <div class=\"body\">${msgFlavor}</div>\n      </div>\n      <div class=\"dice-roll\" style=\"margin-bottom: 10px;\">\n        <div class=\"dice-result\">\n          <div class=\"dice-formula\">${rollString} ${overUnder} ${target}</div>\n          <h4 class=\"dice-total\">${finalRoll}</h4>\n        </div>\n      </div>\n      <div class=\"description\" style=\"margin-bottom: 20px;\">${msgOutcome}${results_critfail}</div>\n      </div>\n    </div>\n    `;\n    //make message ID\n    let chatId = randomID();\n    //make message\n    let macroMsg = await macroRoll.toMessage({\n      id: chatId,\n      user: game.user._id,\n      speaker: {\n          actor: this.id,\n          token: this.token,\n          alias: this.name\n      },\n      content: macroResult\n    },{keepId:true});\n    //make dice\n    await game.dice3d.waitFor3DAnimationByMessageID(chatId);\n}\n\n//get list of player skills\nconst playerItems = game.user.character.items;\n//create header for skill list\nconst skillHeader = `\n<style>\n.macro_window{\n    background: rgb(230,230,230);\n    border-radius: 9px;\n}\n.macro_img{\n    display: flex;\n    justify-content: center; //do I need this\n}\n.macro_desc{\n    font-family: \"Roboto\", sans-serif;\n    font-size: 10.5pt;\n    font-weight: 400;\n    padding-left: 8px;\n    padding-top: 8px;\n    padding-right: 8px;\n    padding-bottom: 8px;\n}\n.grid-2col {\n    display: grid;\n    grid-column: span 2 / span 2;\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n    gap: 2px;\n    padding: 0;\n}\n</style>\n\n<div class =\"macro_window\" style=\"margin-bottom : 7px;\">\n    <div class=\"macro_desc\"><h3>Add a Skill?</h3>If you have a Skill that is relevant to the task at hand, you can add the Skill’s bonus to your Stat or Save before making your roll <em>(giving you a higher number to roll under)</em>.</div>    \n</div>`;\n//create footer for skill list\nconst skillFooter = `<h4>Select your roll type:</h4>`;\n//create template for skill row\nconst skillRow = `\n<label for=\"[RADIO_ID]\">\n<div class =\"macro_window\" style=\"margin-bottom : 7px; vertical-align: middle; padding-left: 3px;\">\n    <div class=\"grid grid-3col\" style=\"grid-template-columns: 20px 60px auto\">\n    <input type=\"radio\" id=\"[RADIO_ID]\" name=\"skill\" value=\"[RADIO_VALUE]\">\n    <div class=\"macro_img\" style=\"padding-top: 5px; padding-left: 0px; padding-right: 0px; padding-bottom: 5px;\"><img src=\"[RADIO_IMG]\" style=\"border:none\"/></div>\n    <div class=\"macro_desc\" style=\"display: table;\">\n        <span style=\"display: table-cell; vertical-align: middle;\">\n        [RADIO_DESC]\n        </span>\n    </div>    \n    </div>\n</div>\n</label>`;\n//create skillList string\nlet skillList = ``;\n//create skill counter\nlet skillCount = 0;\n//create dialog pixel counter\nlet dialogHeight = 192;\n//loop through and create skill rows\nfor (let item of playerItems) {\n    //check if this is a skill\n    if (item.type === \"skill\") {\n        //set temprow as template\n        let tempRow = skillRow;\n        //replace ID\n        tempRow = tempRow.replaceAll(\"[RADIO_ID]\",item.name);\n        //replace value\n        tempRow = tempRow.replace(\"[RADIO_VALUE]\",item.system.bonus);\n        //replace img\n        tempRow = tempRow.replace(\"[RADIO_IMG]\",item.img);\n        //replace desc\n        tempRow = tempRow.replace(\"[RADIO_DESC]\",item.system.description.replace(\"<p>\",\"<p><strong>\"+item.name+\":</strong> \"));\n        //add to skillList\n        skillList = skillList + tempRow;\n        //increment skill count\n        skillCount++;\n        //increment pixel counter\n        dialogHeight = dialogHeight + 77;\n    }\n} \n//make content string\nconst skillHtml = skillHeader + skillList + skillFooter;\n//make window setting\ndlgTitle = '';\nif (playerStat === 'sanity' || playerStat === 'fear' || playerStat === 'body') {\n    dlgTitle = `Save`;\n} else {\n    dlgTitle = `Stat Check`;\n}\n//Select the stat of the roll.\nnew Dialog({\n    title: dlgTitle,\n    content: skillHtml,\n    buttons: {\n        button1: {\n            label: `Next`,\n            callback: (html) => rollCheck(html.find(\"input[name='skill']:checked\").attr(\"id\"),html.find(\"input[name='skill']:checked\").attr(\"value\"),playerStat,playerRoll),\n            icon: `<i class=\"fas fa-chevron-circle-right\"></i>`\n        }\n    }\n},{width: 600,height: dialogHeight}).render(true);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"zR58yoRlxGWmTQvf","name":"Fire & Explosives Wound","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//init vars\nrollTable = 'Fire & Explosives Wound';\nrollString = '1d10';\n//init vars\nrollAdvDis = rollString.includes(\"[\");\n//translate rollString into foundry roll string format\nif (rollAdvDis === true) {\n//extract dice needed\nrollDice = rollString.substr(0,rollString.indexOf(\"[\")).concat(',',rollString.substr(0,rollString.indexOf(\"[\")));\n//make adv/dis template\nrollTemplate = '{[diceSet]}';\n//make foundry roll string\nrollStringParsed = rollTemplate.replace(\"[diceSet]\",rollDice);\n} else {\nrollStringParsed = rollString;\n}\n//roll dice\nlet macroRoll = await new Roll(rollStringParsed).evaluate();\n//assign to vars + replace 10s with 0s\nif (rollAdvDis === true) {\n//get values\nrollA1 = macroRoll.dice[0].results[0].result;\nrollB1 = macroRoll.dice[1].results[0].result;\n//replace 10s\nif (rollA1 === 10) {rollA1 = 0;}\nif (rollB1 === 10) {rollB1 = 0;}\n} else {\n//get values\nrollA1 = macroRoll.dice[0].results[0].result;\n//replace 10s\nif (rollA1 === 10) {rollA1= 0;}\n}\n//choose best value based on Adv/Dis\nif (rollAdvDis === true) {\nif (rollString.includes(\"[+]\") === true) {\n    if(rollA1 < rollB1) { \n    finalRoll = rollA1;\n    } else {\n    finalRoll = rollB1;\n    }\n} else if (rollString.includes(\"[-]\") === true) {\n    if(rollA1 > rollB1) { \n    finalRoll = rollA1;\n    } else {\n    finalRoll = rollB1;\n    }\n}\n} else {\nfinalRoll = rollA1;\n}\n//get table result\ntableResult = game.tables.getName(rollTable).getResultsForRoll(finalRoll);\n//create chat message template\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom : 5px;\">\n    <div class=\"rollweaponh1\">${tableResult[0].parent.name}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${tableResult[0].img}\" title=\"${tableResult[0].parent.name}\" /></div>\n    </div>\n    <div class=\"description\" style=\"margin-bottom : 20px;\">${tableResult[0].text}</div>\n</div>\n</div>\n`;\n//make message ID\nchatId = randomID();\n//make message\nmacroMsg = await macroRoll.toMessage({\nid: chatId,\nuser: game.user._id,\nspeaker: ChatMessage.getSpeaker({token: actor}),\ncontent: macroResult\n},{keepId:true});\n//make dice\nawait game.dice3d.waitFor3DAnimationByMessageID(chatId);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"4iTzRrF7kervlkuQ","name":"Fire & Explosives Wound -","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//init vars\nrollTable = 'Fire & Explosives Wound';\nrollString = '1d10 [-]';\n//init vars\nrollAdvDis = rollString.includes(\"[\");\n//translate rollString into foundry roll string format\nif (rollAdvDis === true) {\n//extract dice needed\nrollDice = rollString.substr(0,rollString.indexOf(\"[\")).concat(',',rollString.substr(0,rollString.indexOf(\"[\")));\n//make adv/dis template\nrollTemplate = '{[diceSet]}';\n//make foundry roll string\nrollStringParsed = rollTemplate.replace(\"[diceSet]\",rollDice);\n} else {\nrollStringParsed = rollString;\n}\n//roll dice\nlet macroRoll = await new Roll(rollStringParsed).evaluate();\n//assign to vars + replace 10s with 0s\nif (rollAdvDis === true) {\n//get values\nrollA1 = macroRoll.dice[0].results[0].result;\nrollB1 = macroRoll.dice[1].results[0].result;\n//replace 10s\nif (rollA1 === 10) {rollA1 = 0;}\nif (rollB1 === 10) {rollB1 = 0;}\n} else {\n//get values\nrollA1 = macroRoll.dice[0].results[0].result;\n//replace 10s\nif (rollA1 === 10) {rollA1= 0;}\n}\n//choose best value based on Adv/Dis\nif (rollAdvDis === true) {\nif (rollString.includes(\"[+]\") === true) {\n    if(rollA1 < rollB1) { \n    finalRoll = rollA1;\n    } else {\n    finalRoll = rollB1;\n    }\n} else if (rollString.includes(\"[-]\") === true) {\n    if(rollA1 > rollB1) { \n    finalRoll = rollA1;\n    } else {\n    finalRoll = rollB1;\n    }\n}\n} else {\nfinalRoll = rollA1;\n}\n//get table result\ntableResult = game.tables.getName(rollTable).getResultsForRoll(finalRoll);\n//create chat message template\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom : 5px;\">\n    <div class=\"rollweaponh1\">${tableResult[0].parent.name}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${tableResult[0].img}\" title=\"${tableResult[0].parent.name}\" /></div>\n    </div>\n    <div class=\"description\" style=\"margin-bottom : 20px;\">${tableResult[0].text}</div>\n</div>\n</div>\n`;\n//make message ID\nchatId = randomID();\n//make message\nmacroMsg = await macroRoll.toMessage({\nid: chatId,\nuser: game.user._id,\nspeaker: ChatMessage.getSpeaker({token: actor}),\ncontent: macroResult\n},{keepId:true});\n//make dice\nawait game.dice3d.waitFor3DAnimationByMessageID(chatId);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"8T7ea8fqTNEE5xof","name":"Fire & Explosives Wound +","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//init vars\nrollTable = 'Fire & Explosives Wound';\nrollString = '1d10 [+]';\n//init vars\nrollAdvDis = rollString.includes(\"[\");\n//translate rollString into foundry roll string format\nif (rollAdvDis === true) {\n//extract dice needed\nrollDice = rollString.substr(0,rollString.indexOf(\"[\")).concat(',',rollString.substr(0,rollString.indexOf(\"[\")));\n//make adv/dis template\nrollTemplate = '{[diceSet]}';\n//make foundry roll string\nrollStringParsed = rollTemplate.replace(\"[diceSet]\",rollDice);\n} else {\nrollStringParsed = rollString;\n}\n//roll dice\nlet macroRoll = await new Roll(rollStringParsed).evaluate();\n//assign to vars + replace 10s with 0s\nif (rollAdvDis === true) {\n//get values\nrollA1 = macroRoll.dice[0].results[0].result;\nrollB1 = macroRoll.dice[1].results[0].result;\n//replace 10s\nif (rollA1 === 10) {rollA1 = 0;}\nif (rollB1 === 10) {rollB1 = 0;}\n} else {\n//get values\nrollA1 = macroRoll.dice[0].results[0].result;\n//replace 10s\nif (rollA1 === 10) {rollA1= 0;}\n}\n//choose best value based on Adv/Dis\nif (rollAdvDis === true) {\nif (rollString.includes(\"[+]\") === true) {\n    if(rollA1 < rollB1) { \n    finalRoll = rollA1;\n    } else {\n    finalRoll = rollB1;\n    }\n} else if (rollString.includes(\"[-]\") === true) {\n    if(rollA1 > rollB1) { \n    finalRoll = rollA1;\n    } else {\n    finalRoll = rollB1;\n    }\n}\n} else {\nfinalRoll = rollA1;\n}\n//get table result\ntableResult = game.tables.getName(rollTable).getResultsForRoll(finalRoll);\n//create chat message template\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom : 5px;\">\n    <div class=\"rollweaponh1\">${tableResult[0].parent.name}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${tableResult[0].img}\" title=\"${tableResult[0].parent.name}\" /></div>\n    </div>\n    <div class=\"description\" style=\"margin-bottom : 20px;\">${tableResult[0].text}</div>\n</div>\n</div>\n`;\n//make message ID\nchatId = randomID();\n//make message\nmacroMsg = await macroRoll.toMessage({\nid: chatId,\nuser: game.user._id,\nspeaker: ChatMessage.getSpeaker({token: actor}),\ncontent: macroResult\n},{keepId:true});\n//make dice\nawait game.dice3d.waitFor3DAnimationByMessageID(chatId);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"wwSxNvTf3iTIbGK2","name":"Gore & Massive Wound +","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//init vars\nrollTable = 'Gore & Massive Wound';\nrollString = '1d10 [+]';\n//init vars\nrollAdvDis = rollString.includes(\"[\");\n//translate rollString into foundry roll string format\nif (rollAdvDis === true) {\n//extract dice needed\nrollDice = rollString.substr(0,rollString.indexOf(\"[\")).concat(',',rollString.substr(0,rollString.indexOf(\"[\")));\n//make adv/dis template\nrollTemplate = '{[diceSet]}';\n//make foundry roll string\nrollStringParsed = rollTemplate.replace(\"[diceSet]\",rollDice);\n} else {\nrollStringParsed = rollString;\n}\n//roll dice\nlet macroRoll = await new Roll(rollStringParsed).evaluate();\n//assign to vars + replace 10s with 0s\nif (rollAdvDis === true) {\n//get values\nrollA1 = macroRoll.dice[0].results[0].result;\nrollB1 = macroRoll.dice[1].results[0].result;\n//replace 10s\nif (rollA1 === 10) {rollA1 = 0;}\nif (rollB1 === 10) {rollB1 = 0;}\n} else {\n//get values\nrollA1 = macroRoll.dice[0].results[0].result;\n//replace 10s\nif (rollA1 === 10) {rollA1= 0;}\n}\n//choose best value based on Adv/Dis\nif (rollAdvDis === true) {\nif (rollString.includes(\"[+]\") === true) {\n    if(rollA1 < rollB1) { \n    finalRoll = rollA1;\n    } else {\n    finalRoll = rollB1;\n    }\n} else if (rollString.includes(\"[-]\") === true) {\n    if(rollA1 > rollB1) { \n    finalRoll = rollA1;\n    } else {\n    finalRoll = rollB1;\n    }\n}\n} else {\nfinalRoll = rollA1;\n}\n//get table result\ntableResult = game.tables.getName(rollTable).getResultsForRoll(finalRoll);\n//create chat message template\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom : 5px;\">\n    <div class=\"rollweaponh1\">${tableResult[0].parent.name}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${tableResult[0].img}\" title=\"${tableResult[0].parent.name}\" /></div>\n    </div>\n    <div class=\"description\" style=\"margin-bottom : 20px;\">${tableResult[0].text}</div>\n</div>\n</div>\n`;\n//make message ID\nchatId = randomID();\n//make message\nmacroMsg = await macroRoll.toMessage({\nid: chatId,\nuser: game.user._id,\nspeaker: ChatMessage.getSpeaker({token: actor}),\ncontent: macroResult\n},{keepId:true});\n//make dice\nawait game.dice3d.waitFor3DAnimationByMessageID(chatId);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"IhrFQcd0d14nObE1","name":"Gunshot Wound","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//init vars\nrollTable = 'Gunshot Wound';\nrollString = '1d10';\n//init vars\nrollAdvDis = rollString.includes(\"[\");\n//translate rollString into foundry roll string format\nif (rollAdvDis === true) {\n//extract dice needed\nrollDice = rollString.substr(0,rollString.indexOf(\"[\")).concat(',',rollString.substr(0,rollString.indexOf(\"[\")));\n//make adv/dis template\nrollTemplate = '{[diceSet]}';\n//make foundry roll string\nrollStringParsed = rollTemplate.replace(\"[diceSet]\",rollDice);\n} else {\nrollStringParsed = rollString;\n}\n//roll dice\nlet macroRoll = await new Roll(rollStringParsed).evaluate();\n//assign to vars + replace 10s with 0s\nif (rollAdvDis === true) {\n//get values\nrollA1 = macroRoll.dice[0].results[0].result;\nrollB1 = macroRoll.dice[1].results[0].result;\n//replace 10s\nif (rollA1 === 10) {rollA1 = 0;}\nif (rollB1 === 10) {rollB1 = 0;}\n} else {\n//get values\nrollA1 = macroRoll.dice[0].results[0].result;\n//replace 10s\nif (rollA1 === 10) {rollA1= 0;}\n}\n//choose best value based on Adv/Dis\nif (rollAdvDis === true) {\nif (rollString.includes(\"[+]\") === true) {\n    if(rollA1 < rollB1) { \n    finalRoll = rollA1;\n    } else {\n    finalRoll = rollB1;\n    }\n} else if (rollString.includes(\"[-]\") === true) {\n    if(rollA1 > rollB1) { \n    finalRoll = rollA1;\n    } else {\n    finalRoll = rollB1;\n    }\n}\n} else {\nfinalRoll = rollA1;\n}\n//get table result\ntableResult = game.tables.getName(rollTable).getResultsForRoll(finalRoll);\n//create chat message template\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom : 5px;\">\n    <div class=\"rollweaponh1\">${tableResult[0].parent.name}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${tableResult[0].img}\" title=\"${tableResult[0].parent.name}\" /></div>\n    </div>\n    <div class=\"description\" style=\"margin-bottom : 20px;\">${tableResult[0].text}</div>\n</div>\n</div>\n`;\n//make message ID\nchatId = randomID();\n//make message\nmacroMsg = await macroRoll.toMessage({\nid: chatId,\nuser: game.user._id,\nspeaker: ChatMessage.getSpeaker({token: actor}),\ncontent: macroResult\n},{keepId:true});\n//make dice\nawait game.dice3d.waitFor3DAnimationByMessageID(chatId);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"h8Du3FvKJRCmjcuX","name":"Gunshot Wound +","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//init vars\nrollTable = 'Gunshot Wound';\nrollString = '1d10 [+]';\n//init vars\nrollAdvDis = rollString.includes(\"[\");\n//translate rollString into foundry roll string format\nif (rollAdvDis === true) {\n//extract dice needed\nrollDice = rollString.substr(0,rollString.indexOf(\"[\")).concat(',',rollString.substr(0,rollString.indexOf(\"[\")));\n//make adv/dis template\nrollTemplate = '{[diceSet]}';\n//make foundry roll string\nrollStringParsed = rollTemplate.replace(\"[diceSet]\",rollDice);\n} else {\nrollStringParsed = rollString;\n}\n//roll dice\nlet macroRoll = await new Roll(rollStringParsed).evaluate();\n//assign to vars + replace 10s with 0s\nif (rollAdvDis === true) {\n//get values\nrollA1 = macroRoll.dice[0].results[0].result;\nrollB1 = macroRoll.dice[1].results[0].result;\n//replace 10s\nif (rollA1 === 10) {rollA1 = 0;}\nif (rollB1 === 10) {rollB1 = 0;}\n} else {\n//get values\nrollA1 = macroRoll.dice[0].results[0].result;\n//replace 10s\nif (rollA1 === 10) {rollA1= 0;}\n}\n//choose best value based on Adv/Dis\nif (rollAdvDis === true) {\nif (rollString.includes(\"[+]\") === true) {\n    if(rollA1 < rollB1) { \n    finalRoll = rollA1;\n    } else {\n    finalRoll = rollB1;\n    }\n} else if (rollString.includes(\"[-]\") === true) {\n    if(rollA1 > rollB1) { \n    finalRoll = rollA1;\n    } else {\n    finalRoll = rollB1;\n    }\n}\n} else {\nfinalRoll = rollA1;\n}\n//get table result\ntableResult = game.tables.getName(rollTable).getResultsForRoll(finalRoll);\n//create chat message template\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom : 5px;\">\n    <div class=\"rollweaponh1\">${tableResult[0].parent.name}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${tableResult[0].img}\" title=\"${tableResult[0].parent.name}\" /></div>\n    </div>\n    <div class=\"description\" style=\"margin-bottom : 20px;\">${tableResult[0].text}</div>\n</div>\n</div>\n`;\n//make message ID\nchatId = randomID();\n//make message\nmacroMsg = await macroRoll.toMessage({\nid: chatId,\nuser: game.user._id,\nspeaker: ChatMessage.getSpeaker({token: actor}),\ncontent: macroResult\n},{keepId:true});\n//make dice\nawait game.dice3d.waitFor3DAnimationByMessageID(chatId);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"v0X199eAgep5kcfE","name":"Panic Check -","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//set rollstring\nrollString = '{1d20,1d20}kl';\n//roll dice\nlet macroRoll = await new Roll(rollString).evaluate();\n//get table result\ntableResult = game.tables.getName(\"Panic Check\").getResultsForRoll(macroRoll.total);\n//get attribute to compare against\ncurStress = game.user.character.system.other.stress.value;\n//create chat message, depending on outcome\nif (macroRoll.total <= curStress) {\n //create message variables\n if (game.user.character.system.class.value === 'Android') {\n  msg_outcome = `\n  <div style=\"font-size: 1.1rem; margin-top : -10px; margin-bottom : 5px;\">\n   <strong>FAILURE!</strong>\n  </div>\n  You lose motor control for a moment as your sensory inputs flicker.\n  `;\n  if(macroRoll.total === 19) {tableResult[0].text = tableResult[0].text.replace(\"HEART ATTACK / SHORT CIRCUIT (ANDROIDS).\",\"SHORT CIRCUIT.\")};\n } else {\n  msg_outcome = `\n  <div style=\"font-size: 1.1rem; margin-top : -10px; margin-bottom : 5px;\">\n   <strong>FAILURE!</strong>\n  </div>\n  Your heartbeat races out of control and you start to feel dizzy.\n  `;\n  if(macroRoll.total === 19) {tableResult[0].text = tableResult[0].text.replace(\"HEART ATTACK / SHORT CIRCUIT (ANDROIDS).\",\"HEART ATTACK.\")};\n }\n overUnder = `<i class=\"fas fa-angle-right\"></i>`;\n target = curStress;\n //create message from template\n macroResult = `\n <div class=\"mosh\">\n  <div class=\"rollcontainer\">\n   <div class=\"flexrow\" style=\"margin-bottom : 5px;\">\n    <div class=\"rollweaponh1\">${tableResult[0].parent.name}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${tableResult[0].img}\" title=\"${tableResult[0].parent.name}\" /></div>\n   </div>\n   <div class=\"description\" style=\"margin-bottom: 10px;\">\n    <div class=\"body\">${msg_outcome}</div>\n   </div>\n   <div class=\"dice-roll\" style=\"margin-bottom: 10px;\">\n    <div class=\"dice-result\">\n     <div class=\"dice-formula\">${rollString} ${overUnder} ${target}</div>\n     <h4 class=\"dice-total\">${macroRoll.total}</h4>\n    </div>\n   </div>\n   <div class=\"description\" style=\"margin-bottom: 20px;\">${tableResult[0].text}</div>\n  </div>\n </div>\n `;\n} else {\n //create message variables\n msg_outcome = `\n <div style=\"font-size: 1.1rem; margin-top : -10px; margin-bottom : 5px;\">\n  <strong>SUCCESS!</strong>\n </div>\n You take a deep breath and regain your composure.\n `;\n overUnder = `<i class=\"fas fa-angle-right\"></i>`;\n target = curStress;\n //create message from template\n macroResult = `\n <div class=\"mosh\">\n  <div class=\"rollcontainer\">\n   <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n    <div class=\"rollweaponh1\">${tableResult[0].parent.name}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${tableResult[0].img}\" title=\"${tableResult[0].parent.name}\" /></div>\n   </div>\n   <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n    <div class=\"body\">${msg_outcome}</div>\n   </div>\n  </div>\n </div>\n `;\n}\n//make message ID\nchatId = randomID();\n//make message\nmacroMsg = await macroRoll.toMessage({\n id: chatId,\n user: game.user._id,\n speaker: ChatMessage.getSpeaker({token: actor}),\n content: macroResult\n},{keepId:true});\n//make dice\nawait game.dice3d.waitFor3DAnimationByMessageID(chatId);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"Dmz96Uhcm8XG8Zv1","name":"Rest Save -","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//set rollString\nrollString = '1d100 [-]';\n  //init vars\n  rollAdvDis = rollString.includes(\"[\");\n  //translate rollString into foundry roll string format\n  if (rollAdvDis === true) {\n    //extract dice needed\n    rollDice = rollString.substr(0,rollString.indexOf(\"[\")).concat(',',rollString.substr(0,rollString.indexOf(\"[\")));\n    //make adv/dis template\n    rollTemplate = '{[diceSet]}';\n    //make foundry roll string\n    rollStringParsed = rollTemplate.replace(\"[diceSet]\",rollDice);\n  } else {\n    rollStringParsed = rollString;\n  }\n  //roll dice\n  let macroRoll = await new Roll(rollStringParsed).evaluate();\n  //assign to vars + replace 100s with 0s\n  if (rollAdvDis === true) {\n    //get values\n    rollA1 = macroRoll.dice[0].results[0].result;\n    rollB1 = macroRoll.dice[1].results[0].result;\n    //replace 10s\n    if (rollA1 === 100) {rollA1 = 0;}\n    if (rollB1 === 100) {rollB1 = 0;}\n  } else {\n    //get values\n    rollA1 = macroRoll.dice[0].results[0].result;\n    //replace 10s\n    if (rollA1 === 100) {rollA1= 0;}\n  }\n  //choose best value based on Adv/Dis\n  if (rollAdvDis === true) {\n    if (rollString.includes(\"[+]\") === true) {\n      if(rollA1 < rollB1) { \n        finalRoll = rollA1;\n      } else {\n        finalRoll = rollB1;\n      }\n    } else if (rollString.includes(\"[-]\") === true) {\n      if(rollA1 > rollB1) { \n        finalRoll = rollA1;\n      } else {\n        finalRoll = rollB1;\n      }\n    }\n  } else {\n    finalRoll = rollA1;\n  }\n//get attributes to compare against\ncurStress = game.user.character.system.other.stress.value;\nsanitySave = game.user.character.system.stats.sanity.value;\nfearSave = game.user.character.system.stats.fear.value;\nbodySave = game.user.character.system.stats.body.value;\nminSave = Math.min(sanitySave, fearSave, bodySave);\n//calculate rest result\nonesValue = Number(String(finalRoll).charAt(String(finalRoll).length-1));\n//prepare list of critical rolls\ndoubles = new Set([0, 11, 22, 33, 44, 55, 66, 77, 88, 99]);\n//check for crit\nif (doubles.has(finalRoll) === true) {\n  critical = \"CRITICAL \";\n} else {\n  critical = \"\";\n}\n//set result variables\nif (finalRoll >= 90) {\n  outcome = \"FAILURE\";\n  change = \"increased\";\n  type = \"Gained\";\n} else if (finalRoll < minSave) {\n  outcome = \"SUCCESS\";\n  change = \"decreased\";\n  type = \"Relieved\";\n} else {\n  outcome = \"FAILURE\";\n  change = \"increased\";\n  type = \"Gained\";\n}\n//set stress mod\nif (critical === \"CRITICAL \" && outcome === \"SUCCESS\") {\n  stressMod = -2*onesValue;\n} else if (critical === \"\" && outcome === \"SUCCESS\") {\n  stressMod = -1*onesValue;\n} else {\n  stressMod = 1;\n}\n//set new stress level\nif (curStress + stressMod > 20) {\n  newStress = 20;\n  stressDiff = newStress - curStress;\n  saveImpact = stressMod - stressDiff;\n} else if (curStress + stressMod < 2) {\n  newStress = 2;\n  stressDiff = newStress - curStress;\n  saveImpact = stressMod - stressDiff;\n} else {\n  newStress = curStress + stressMod;\n  stressDiff = newStress - curStress;\n  saveImpact = stressMod - stressDiff;\n}\n//set header\nif (stressMod === 0 || stressDiff === 0) {\n  msgHeader = `Stress Unchanged`;\n} else {\n  msgHeader = `Stress ${type}`;\n}\n//update characters stress level\ngame.user.character.update({'system.other.stress.value': newStress});\n//create stress flavor text\nif (game.user.character.system.class.value === 'Android') {\n  if (outcome === \"FAILURE\") {\n    msgFlavor = `\n    <div style=\"font-size: 1.1rem; margin-top : -10px; margin-bottom : 5px;\">\n      <strong>${critical}${outcome}!</strong>\n    </div>\n    Power surges through your chest and you start to overheat.<br>\n    `;\n  } else {\n    msgFlavor = `\n    <div style=\"font-size: 1.1rem; margin-top : -10px; margin-bottom : 5px;\">\n      <strong>${critical}${outcome}!</strong>\n    </div>\n    You soft-reset, purging unnecessary background processes.<br>\n    `;\n  }\n} else {\n  if (outcome === \"FAILURE\") {\n    msgFlavor = `\n    <div style=\"font-size: 1.1rem; margin-top : -10px; margin-bottom : 5px;\">\n      <strong>${critical}${outcome}!</strong>\n    </div>\n    You feel tightness in your chest and start to sweat.<br>\n    `;\n  } else {\n    msgFlavor = `\n    <div style=\"font-size: 1.1rem; margin-top : -10px; margin-bottom : 5px;\">\n      <strong>${critical}${outcome}!</strong>\n    </div>\n    You feel a sense of calm wash over you.<br>\n    `;\n  }\n}\n//create chat variables\nif (stressMod === 0) {\n  msgOutcome = `Frustratingly, you can't seem to relax. You still have a stress of <strong>${newStress}</strong>.`;\n} else if (stressMod < 0 && newStress === 2 && stressDiff === 0) {\n  msgOutcome = `You are already as calm as possible.`;\n} else if (stressMod > 0 && newStress === 20 && stressDiff > 0) {\n  msgOutcome = `You hit rock bottom. Stress increased from <strong>${curStress}</strong> to <strong>${newStress}</strong>. You must also <strong>reduce the most relevant Stat or Save by ${saveImpact}</strong>.`;\n} else if (stressMod > 0 && newStress === 20 && stressDiff === 0) {\n  msgOutcome = `You feel a part of yourself drift away. <strong>Reduce the most relevant Stat or Save by ${saveImpact}</strong>.`;\n} else {\n  msgOutcome = `Stress ${change} from <strong>${curStress}</strong> to <strong>${newStress}</strong>.`;\n}\n//create message if crit fail\nif (critical === \"CRITICAL \" && outcome === \"FAILURE\") {\n  results_critfail = `<br><br>@Macro[Panic Check]{Make a Panic Check}`;\n} else {\n  results_critfail = ``;\n}\n//set roll info\noverUnder = `<i class=\"fas fa-angle-left\"></i>`;\ntarget = minSave;\n//create message from template\nmacroResult = `\n<div class=\"mosh\">\n  <div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom : 5px;\">\n      <div class=\"rollweaponh1\">${msgHeader}</div>\n      <div style=\"text-align: right\"><img class=\"roll-image\" src=\"modules/fvtt_mosh_1e_psg/icons/macros/rest_save.png\" /></div>\n    </div>\n    <div class=\"description\" style=\"margin-bottom: 10px;\">\n      <div class=\"body\">${msgFlavor}</div>\n    </div>\n    <div class=\"dice-roll\" style=\"margin-bottom: 10px;\">\n      <div class=\"dice-result\">\n        <div class=\"dice-formula\">${rollString} ${overUnder} ${target}</div>\n        <h4 class=\"dice-total\">${finalRoll}</h4>\n      </div>\n    </div>\n    <div class=\"description\" style=\"margin-bottom: 20px;\">${msgOutcome}${results_critfail}</div>\n  </div>\n</div>\n`;\nchatId = randomID();\n//make message\nmacroMsg = await macroRoll.toMessage({\n  id: chatId,\n  user: game.user._id,\n  speaker: ChatMessage.getSpeaker({token: actor}),\n  content: macroResult\n},{keepId:true});\n//make dice\nawait game.dice3d.waitFor3DAnimationByMessageID(chatId);\n","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"OQ4YvGCHozXgylfw","name":"Sanity Save","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//init vars\nplayerStat = 'sanity';\nplayerRoll = '1d100 [-]';\n\n//main roll function\nasync function rollCheck(addSkill,addPoints,rollStat,rollString) {\n  //init vars\n  rollAdvDis = rollString.includes(\"[\");\n  //translate rollString into foundry roll string format\n  if (rollAdvDis === true) {\n    //extract dice needed\n    rollDice = rollString.substr(0,rollString.indexOf(\"[\")).concat(',',rollString.substr(0,rollString.indexOf(\"[\")));\n    //make adv/dis template\n    rollTemplate = '{[diceSet]}';\n    //make foundry roll string\n    rollStringParsed = rollTemplate.replace(\"[diceSet]\",rollDice);\n  } else {\n    rollStringParsed = rollString;\n  }\n  //roll dice\n  let macroRoll = await new Roll(rollStringParsed).evaluate();\n  //assign to vars + replace 100s with 0s\n  if (rollAdvDis === true) {\n    //get values\n    rollA1 = macroRoll.dice[0].results[0].result;\n    rollB1 = macroRoll.dice[1].results[0].result;\n    //replace 10s\n    if (rollA1 === 100) {rollA1 = 0;}\n    if (rollB1 === 100) {rollB1 = 0;}\n  } else {\n    //get values\n    rollA1 = macroRoll.dice[0].results[0].result;\n    //replace 10s\n    if (rollA1 === 100) {rollA1= 0;}\n  }\n  //choose best value based on Adv/Dis\n  if (rollAdvDis === true) {\n    if (rollString.includes(\"[+]\") === true) {\n      if(rollA1 < rollB1) { \n        finalRoll = rollA1;\n      } else {\n        finalRoll = rollB1;\n      }\n    } else if (rollString.includes(\"[-]\") === true) {\n      if(rollA1 > rollB1) { \n        finalRoll = rollA1;\n      } else {\n        finalRoll = rollB1;\n      }\n    }\n  } else {\n    finalRoll = rollA1;\n  }\n    //get stress\n    let curStress = game.user.character.system.other.stress.value;\n    //define vars\n    let statName = '';\n    let msgHeader = '';\n    let statValue = 0;\n    //get the value for the chosen stat\n    if (rollStat === `strength`) {\n      statName = `Strength`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.strength.value + game.user.character.system.stats.strength.mod;\n    } else if (rollStat === `speed`) {\n      statName = `Speed`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.speed.value + game.user.character.system.stats.speed.mod;\n    } else if (rollStat === `intellect`) {\n      statName = `Intellect`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.intellect.value + game.user.character.system.stats.intellect.mod;\n    } else if (rollStat === `combat`) {\n      statName = `Combat`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.combat.value + game.user.character.system.stats.combat.mod;\n    } else if (rollStat === `sanity`) {\n      statName = `Sanity`\n      msgHeader = rollStat + ` save`;\n      statValue = game.user.character.system.stats.sanity.value;\n    } else if (rollStat === `fear`) {\n      statName = `Fear`\n      msgHeader = rollStat + ` save`;\n      statValue = game.user.character.system.stats.fear.value;\n    } else if (rollStat === `body`) {\n      statName = `Body`\n      msgHeader = rollStat + ` save`;\n      statValue = game.user.character.system.stats.body.value;\n    }\n    //set addPoints to zero if null\n    if(addPoints === undefined) {addPoints = 0}\n    //set roll info\n    let overUnder = `<i class=\"fas fa-angle-left\"></i>`;\n    let target = statValue + Number(addPoints);\n    //prepare list of critical rolls\n    let doubles = new Set([0, 11, 22, 33, 44, 55, 66, 77, 88, 99]);\n    //define vars\n    let critical = '';\n    //check for crit\n    if (doubles.has(finalRoll) === true) {\n      critical = \"CRITICAL \";\n    } else {\n      critical = \"\";\n    }\n    //define vars\n    let outcome = '';\n    let position = '';\n    //set result variables\n    if (finalRoll >= 90) {\n      outcome = \"FAILURE\";\n      position = 'higher';\n    } else if (finalRoll < target) {\n      outcome = \"SUCCESS\";\n      position = 'lower';\n    } else {\n      outcome = \"FAILURE\";\n      position = 'higher';\n    }\n    //define vars\n    let stressMod = 0;\n    //set stress mod\n    if (outcome === \"FAILURE\") {\n      stressMod = 1;\n    } else {\n      stressMod = 0;\n    }\n    //define vars\n    let newStress = 0;\n    let stressDiff = 0;\n    let saveImpact = 0;\n    //set new stress level\n    if (curStress + stressMod > 20) {\n      newStress = 20;\n      stressDiff = newStress - curStress;\n      saveImpact = stressMod - stressDiff;\n    } else if (curStress + stressMod < 2) {\n      newStress = 2;\n      stressDiff = newStress - curStress;\n      saveImpact = stressMod - stressDiff;\n    } else {\n      newStress = curStress + stressMod;\n      stressDiff = newStress - curStress;\n      saveImpact = stressMod - stressDiff;\n    }\n    //update characters stress level\n    game.user.character.update({'system.other.stress.value': newStress});\n    //define vars\n    let msgFlavor = '';\n    //create stress flavor text\n    if (addPoints > 0) {\n      msgFlavor = `\n      <div style=\"font-size: 1.1rem; margin-top : -10px; margin-bottom : 5px;\">\n        <strong>${critical}${outcome}!</strong>\n      </div>\n      You rolled ${position} than your <strong>${statName}</strong> plus <strong>${addSkill}</strong> skill bonus.<br>\n      `;\n    } else {\n      msgFlavor = `\n      <div style=\"font-size: 1.1rem; margin-top : -10px; margin-bottom : 5px;\">\n        <strong>${critical}${outcome}!</strong>\n      </div>\n      You rolled ${position} than your <strong>${statName}</strong>.<br>\n      `;\n    }\n    //define vars\n    let msgOutcome = '';\n    //create chat variables\n    if (outcome === \"SUCCESS\") {\n      msgOutcome = `You gain some confidence in your skills.`;    \n    } else if (outcome === \"FAILURE\" && stressMod > 0 && newStress === 20 && stressDiff > 0) {\n      msgOutcome = `You hit rock bottom. Stress increased from <strong>${curStress}</strong> to <strong>${newStress}</strong>. You must also <strong>reduce the most relevant Stat or Save by ${saveImpact}</strong>.`;\n    } else if (outcome === \"FAILURE\" && stressMod > 0 && newStress === 20 && stressDiff === 0) {\n      msgOutcome = `You feel a part of yourself drift away. <strong>Reduce the most relevant Stat or Save by ${saveImpact}</strong>.`;\n    } else {\n      msgOutcome = `Stress increased from <strong>${curStress}</strong> to <strong>${newStress}</strong>.`;\n    }\n    //define vars\n    let results_critfail = '';\n    //create message if crit fail\n    if (critical === \"CRITICAL \" && outcome === \"FAILURE\") {\n      results_critfail = `<br><br>@Macro[Panic Check]{Make a Panic Check}`;\n    } else {\n      results_critfail = ``;\n    }\n    //create chat message template\n    let macroResult = `\n    <div class=\"mosh\">\n      <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom : 5px;\">\n          <div class=\"rollweaponh1\">${msgHeader}</div>\n          <div style=\"text-align: right\"><img class=\"roll-image\" src=\"modules/fvtt_mosh_1e_psg/icons/attributes/${rollStat}.png\" /></div>\n        </div>\n        <div class=\"description\" style=\"margin-bottom: 10px;\">\n        <div class=\"body\">${msgFlavor}</div>\n      </div>\n      <div class=\"dice-roll\" style=\"margin-bottom: 10px;\">\n        <div class=\"dice-result\">\n          <div class=\"dice-formula\">${rollString} ${overUnder} ${target}</div>\n          <h4 class=\"dice-total\">${finalRoll}</h4>\n        </div>\n      </div>\n      <div class=\"description\" style=\"margin-bottom: 20px;\">${msgOutcome}${results_critfail}</div>\n      </div>\n    </div>\n    `;\n    //make message ID\n    let chatId = randomID();\n    //make message\n    let macroMsg = await macroRoll.toMessage({\n      id: chatId,\n      user: game.user._id,\n      speaker: {\n          actor: this.id,\n          token: this.token,\n          alias: this.name\n      },\n      content: macroResult\n    },{keepId:true});\n    //make dice\n    await game.dice3d.waitFor3DAnimationByMessageID(chatId);\n}\n\n//get list of player skills\nconst playerItems = game.user.character.items;\n//create header for skill list\nconst skillHeader = `\n<style>\n.macro_window{\n    background: rgb(230,230,230);\n    border-radius: 9px;\n}\n.macro_img{\n    display: flex;\n    justify-content: center; //do I need this\n}\n.macro_desc{\n    font-family: \"Roboto\", sans-serif;\n    font-size: 10.5pt;\n    font-weight: 400;\n    padding-left: 8px;\n    padding-top: 8px;\n    padding-right: 8px;\n    padding-bottom: 8px;\n}\n.grid-2col {\n    display: grid;\n    grid-column: span 2 / span 2;\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n    gap: 2px;\n    padding: 0;\n}\n</style>\n\n<div class =\"macro_window\" style=\"margin-bottom : 7px;\">\n    <div class=\"macro_desc\"><h3>Add a Skill?</h3>If you have a Skill that is relevant to the task at hand, you can add the Skill’s bonus to your Stat or Save before making your roll <em>(giving you a higher number to roll under)</em>.</div>    \n</div>`;\n//create footer for skill list\nconst skillFooter = `<h4>Select your roll type:</h4>`;\n//create template for skill row\nconst skillRow = `\n<label for=\"[RADIO_ID]\">\n<div class =\"macro_window\" style=\"margin-bottom : 7px; vertical-align: middle; padding-left: 3px;\">\n    <div class=\"grid grid-3col\" style=\"grid-template-columns: 20px 60px auto\">\n    <input type=\"radio\" id=\"[RADIO_ID]\" name=\"skill\" value=\"[RADIO_VALUE]\">\n    <div class=\"macro_img\" style=\"padding-top: 5px; padding-left: 0px; padding-right: 0px; padding-bottom: 5px;\"><img src=\"[RADIO_IMG]\" style=\"border:none\"/></div>\n    <div class=\"macro_desc\" style=\"display: table;\">\n        <span style=\"display: table-cell; vertical-align: middle;\">\n        [RADIO_DESC]\n        </span>\n    </div>    \n    </div>\n</div>\n</label>`;\n//create skillList string\nlet skillList = ``;\n//create skill counter\nlet skillCount = 0;\n//create dialog pixel counter\nlet dialogHeight = 192;\n//loop through and create skill rows\nfor (let item of playerItems) {\n    //check if this is a skill\n    if (item.type === \"skill\") {\n        //set temprow as template\n        let tempRow = skillRow;\n        //replace ID\n        tempRow = tempRow.replaceAll(\"[RADIO_ID]\",item.name);\n        //replace value\n        tempRow = tempRow.replace(\"[RADIO_VALUE]\",item.system.bonus);\n        //replace img\n        tempRow = tempRow.replace(\"[RADIO_IMG]\",item.img);\n        //replace desc\n        tempRow = tempRow.replace(\"[RADIO_DESC]\",item.system.description.replace(\"<p>\",\"<p><strong>\"+item.name+\":</strong> \"));\n        //add to skillList\n        skillList = skillList + tempRow;\n        //increment skill count\n        skillCount++;\n        //increment pixel counter\n        dialogHeight = dialogHeight + 77;\n    }\n} \n//make content string\nconst skillHtml = skillHeader + skillList + skillFooter;\n//make window setting\ndlgTitle = '';\nif (playerStat === 'sanity' || playerStat === 'fear' || playerStat === 'body') {\n    dlgTitle = `Save`;\n} else {\n    dlgTitle = `Stat Check`;\n}\n//Select the stat of the roll.\nnew Dialog({\n    title: dlgTitle,\n    content: skillHtml,\n    buttons: {\n        button1: {\n            label: `Next`,\n            callback: (html) => rollCheck(html.find(\"input[name='skill']:checked\").attr(\"id\"),html.find(\"input[name='skill']:checked\").attr(\"value\"),playerStat,playerRoll),\n            icon: `<i class=\"fas fa-chevron-circle-right\"></i>`\n        }\n    }\n},{width: 600,height: dialogHeight}).render(true);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"SbD3ecI641ZNhrO8","name":"Strength Check -","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//init vars\nplayerStat = 'strength';\nplayerRoll = '1d100 [-]';\n\n//main roll function\nasync function rollCheck(addSkill,addPoints,rollStat,rollString) {\n  //init vars\n  rollAdvDis = rollString.includes(\"[\");\n  //translate rollString into foundry roll string format\n  if (rollAdvDis === true) {\n    //extract dice needed\n    rollDice = rollString.substr(0,rollString.indexOf(\"[\")).concat(',',rollString.substr(0,rollString.indexOf(\"[\")));\n    //make adv/dis template\n    rollTemplate = '{[diceSet]}';\n    //make foundry roll string\n    rollStringParsed = rollTemplate.replace(\"[diceSet]\",rollDice);\n  } else {\n    rollStringParsed = rollString;\n  }\n  //roll dice\n  let macroRoll = await new Roll(rollStringParsed).evaluate();\n  //assign to vars + replace 100s with 0s\n  if (rollAdvDis === true) {\n    //get values\n    rollA1 = macroRoll.dice[0].results[0].result;\n    rollB1 = macroRoll.dice[1].results[0].result;\n    //replace 10s\n    if (rollA1 === 100) {rollA1 = 0;}\n    if (rollB1 === 100) {rollB1 = 0;}\n  } else {\n    //get values\n    rollA1 = macroRoll.dice[0].results[0].result;\n    //replace 10s\n    if (rollA1 === 100) {rollA1= 0;}\n  }\n  //choose best value based on Adv/Dis\n  if (rollAdvDis === true) {\n    if (rollString.includes(\"[+]\") === true) {\n      if(rollA1 < rollB1) { \n        finalRoll = rollA1;\n      } else {\n        finalRoll = rollB1;\n      }\n    } else if (rollString.includes(\"[-]\") === true) {\n      if(rollA1 > rollB1) { \n        finalRoll = rollA1;\n      } else {\n        finalRoll = rollB1;\n      }\n    }\n  } else {\n    finalRoll = rollA1;\n  }\n    //get stress\n    let curStress = game.user.character.system.other.stress.value;\n    //define vars\n    let statName = '';\n    let msgHeader = '';\n    let statValue = 0;\n    //get the value for the chosen stat\n    if (rollStat === `strength`) {\n      statName = `Strength`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.strength.value + game.user.character.system.stats.strength.mod;\n    } else if (rollStat === `speed`) {\n      statName = `Speed`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.speed.value + game.user.character.system.stats.speed.mod;\n    } else if (rollStat === `intellect`) {\n      statName = `Intellect`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.intellect.value + game.user.character.system.stats.intellect.mod;\n    } else if (rollStat === `combat`) {\n      statName = `Combat`\n      msgHeader = rollStat + ` check`;\n      statValue = game.user.character.system.stats.combat.value + game.user.character.system.stats.combat.mod;\n    } else if (rollStat === `sanity`) {\n      statName = `Sanity`\n      msgHeader = rollStat + ` save`;\n      statValue = game.user.character.system.stats.sanity.value;\n    } else if (rollStat === `fear`) {\n      statName = `Fear`\n      msgHeader = rollStat + ` save`;\n      statValue = game.user.character.system.stats.fear.value;\n    } else if (rollStat === `body`) {\n      statName = `Body`\n      msgHeader = rollStat + ` save`;\n      statValue = game.user.character.system.stats.body.value;\n    }\n    //set addPoints to zero if null\n    if(addPoints === undefined) {addPoints = 0}\n    //set roll info\n    let overUnder = `<i class=\"fas fa-angle-left\"></i>`;\n    let target = statValue + Number(addPoints);\n    //prepare list of critical rolls\n    let doubles = new Set([0, 11, 22, 33, 44, 55, 66, 77, 88, 99]);\n    //define vars\n    let critical = '';\n    //check for crit\n    if (doubles.has(finalRoll) === true) {\n      critical = \"CRITICAL \";\n    } else {\n      critical = \"\";\n    }\n    //define vars\n    let outcome = '';\n    let position = '';\n    //set result variables\n    if (finalRoll >= 90) {\n      outcome = \"FAILURE\";\n      position = 'higher';\n    } else if (finalRoll < target) {\n      outcome = \"SUCCESS\";\n      position = 'lower';\n    } else {\n      outcome = \"FAILURE\";\n      position = 'higher';\n    }\n    //define vars\n    let stressMod = 0;\n    //set stress mod\n    if (outcome === \"FAILURE\") {\n      stressMod = 1;\n    } else {\n      stressMod = 0;\n    }\n    //define vars\n    let newStress = 0;\n    let stressDiff = 0;\n    let saveImpact = 0;\n    //set new stress level\n    if (curStress + stressMod > 20) {\n      newStress = 20;\n      stressDiff = newStress - curStress;\n      saveImpact = stressMod - stressDiff;\n    } else if (curStress + stressMod < 2) {\n      newStress = 2;\n      stressDiff = newStress - curStress;\n      saveImpact = stressMod - stressDiff;\n    } else {\n      newStress = curStress + stressMod;\n      stressDiff = newStress - curStress;\n      saveImpact = stressMod - stressDiff;\n    }\n    //update characters stress level\n    game.user.character.update({'system.other.stress.value': newStress});\n    //define vars\n    let msgFlavor = '';\n    //create stress flavor text\n    if (addPoints > 0) {\n      msgFlavor = `\n      <div style=\"font-size: 1.1rem; margin-top : -10px; margin-bottom : 5px;\">\n        <strong>${critical}${outcome}!</strong>\n      </div>\n      You rolled ${position} than your <strong>${statName}</strong> plus <strong>${addSkill}</strong> skill bonus.<br>\n      `;\n    } else {\n      msgFlavor = `\n      <div style=\"font-size: 1.1rem; margin-top : -10px; margin-bottom : 5px;\">\n        <strong>${critical}${outcome}!</strong>\n      </div>\n      You rolled ${position} than your <strong>${statName}</strong>.<br>\n      `;\n    }\n    //define vars\n    let msgOutcome = '';\n    //create chat variables\n    if (outcome === \"SUCCESS\") {\n      msgOutcome = `You gain some confidence in your skills.`;    \n    } else if (outcome === \"FAILURE\" && stressMod > 0 && newStress === 20 && stressDiff > 0) {\n      msgOutcome = `You hit rock bottom. Stress increased from <strong>${curStress}</strong> to <strong>${newStress}</strong>. You must also <strong>reduce the most relevant Stat or Save by ${saveImpact}</strong>.`;\n    } else if (outcome === \"FAILURE\" && stressMod > 0 && newStress === 20 && stressDiff === 0) {\n      msgOutcome = `You feel a part of yourself drift away. <strong>Reduce the most relevant Stat or Save by ${saveImpact}</strong>.`;\n    } else {\n      msgOutcome = `Stress increased from <strong>${curStress}</strong> to <strong>${newStress}</strong>.`;\n    }\n    //define vars\n    let results_critfail = '';\n    //create message if crit fail\n    if (critical === \"CRITICAL \" && outcome === \"FAILURE\") {\n      results_critfail = `<br><br>@Macro[Panic Check]{Make a Panic Check}`;\n    } else {\n      results_critfail = ``;\n    }\n    //create chat message template\n    let macroResult = `\n    <div class=\"mosh\">\n      <div class=\"rollcontainer\">\n        <div class=\"flexrow\" style=\"margin-bottom : 5px;\">\n          <div class=\"rollweaponh1\">${msgHeader}</div>\n          <div style=\"text-align: right\"><img class=\"roll-image\" src=\"modules/fvtt_mosh_1e_psg/icons/attributes/${rollStat}.png\" /></div>\n        </div>\n        <div class=\"description\" style=\"margin-bottom: 10px;\">\n        <div class=\"body\">${msgFlavor}</div>\n      </div>\n      <div class=\"dice-roll\" style=\"margin-bottom: 10px;\">\n        <div class=\"dice-result\">\n          <div class=\"dice-formula\">${rollString} ${overUnder} ${target}</div>\n          <h4 class=\"dice-total\">${finalRoll}</h4>\n        </div>\n      </div>\n      <div class=\"description\" style=\"margin-bottom: 20px;\">${msgOutcome}${results_critfail}</div>\n      </div>\n    </div>\n    `;\n    //make message ID\n    let chatId = randomID();\n    //make message\n    let macroMsg = await macroRoll.toMessage({\n      id: chatId,\n      user: game.user._id,\n      speaker: {\n          actor: this.id,\n          token: this.token,\n          alias: this.name\n      },\n      content: macroResult\n    },{keepId:true});\n    //make dice\n    await game.dice3d.waitFor3DAnimationByMessageID(chatId);\n}\n\n//get list of player skills\nconst playerItems = game.user.character.items;\n//create header for skill list\nconst skillHeader = `\n<style>\n.macro_window{\n    background: rgb(230,230,230);\n    border-radius: 9px;\n}\n.macro_img{\n    display: flex;\n    justify-content: center; //do I need this\n}\n.macro_desc{\n    font-family: \"Roboto\", sans-serif;\n    font-size: 10.5pt;\n    font-weight: 400;\n    padding-left: 8px;\n    padding-top: 8px;\n    padding-right: 8px;\n    padding-bottom: 8px;\n}\n.grid-2col {\n    display: grid;\n    grid-column: span 2 / span 2;\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n    gap: 2px;\n    padding: 0;\n}\n</style>\n\n<div class =\"macro_window\" style=\"margin-bottom : 7px;\">\n    <div class=\"macro_desc\"><h3>Add a Skill?</h3>If you have a Skill that is relevant to the task at hand, you can add the Skill’s bonus to your Stat or Save before making your roll <em>(giving you a higher number to roll under)</em>.</div>    \n</div>`;\n//create footer for skill list\nconst skillFooter = `<h4>Select your roll type:</h4>`;\n//create template for skill row\nconst skillRow = `\n<label for=\"[RADIO_ID]\">\n<div class =\"macro_window\" style=\"margin-bottom : 7px; vertical-align: middle; padding-left: 3px;\">\n    <div class=\"grid grid-3col\" style=\"grid-template-columns: 20px 60px auto\">\n    <input type=\"radio\" id=\"[RADIO_ID]\" name=\"skill\" value=\"[RADIO_VALUE]\">\n    <div class=\"macro_img\" style=\"padding-top: 5px; padding-left: 0px; padding-right: 0px; padding-bottom: 5px;\"><img src=\"[RADIO_IMG]\" style=\"border:none\"/></div>\n    <div class=\"macro_desc\" style=\"display: table;\">\n        <span style=\"display: table-cell; vertical-align: middle;\">\n        [RADIO_DESC]\n        </span>\n    </div>    \n    </div>\n</div>\n</label>`;\n//create skillList string\nlet skillList = ``;\n//create skill counter\nlet skillCount = 0;\n//create dialog pixel counter\nlet dialogHeight = 192;\n//loop through and create skill rows\nfor (let item of playerItems) {\n    //check if this is a skill\n    if (item.type === \"skill\") {\n        //set temprow as template\n        let tempRow = skillRow;\n        //replace ID\n        tempRow = tempRow.replaceAll(\"[RADIO_ID]\",item.name);\n        //replace value\n        tempRow = tempRow.replace(\"[RADIO_VALUE]\",item.system.bonus);\n        //replace img\n        tempRow = tempRow.replace(\"[RADIO_IMG]\",item.img);\n        //replace desc\n        tempRow = tempRow.replace(\"[RADIO_DESC]\",item.system.description.replace(\"<p>\",\"<p><strong>\"+item.name+\":</strong> \"));\n        //add to skillList\n        skillList = skillList + tempRow;\n        //increment skill count\n        skillCount++;\n        //increment pixel counter\n        dialogHeight = dialogHeight + 77;\n    }\n} \n//make content string\nconst skillHtml = skillHeader + skillList + skillFooter;\n//make window setting\ndlgTitle = '';\nif (playerStat === 'sanity' || playerStat === 'fear' || playerStat === 'body') {\n    dlgTitle = `Save`;\n} else {\n    dlgTitle = `Stat Check`;\n}\n//Select the stat of the roll.\nnew Dialog({\n    title: dlgTitle,\n    content: skillHtml,\n    buttons: {\n        button1: {\n            label: `Next`,\n            callback: (html) => rollCheck(html.find(\"input[name='skill']:checked\").attr(\"id\"),html.find(\"input[name='skill']:checked\").attr(\"value\"),playerStat,playerRoll),\n            icon: `<i class=\"fas fa-chevron-circle-right\"></i>`\n        }\n    }\n},{width: 600,height: dialogHeight}).render(true);","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}
{"_id":"3QfAX6y8Ayh2CwZa","name":"Take Bleeding Damage","type":"script","scope":"global","img":"icons/svg/d20-grey.svg","command":"//get attribute to compare against\ncurValue = game.user.character.system.health.value;\nminValue = game.user.character.system.health.min;\nmaxValue = game.user.character.system.health.max;\ncurWounds = game.user.character.system.hits.value;\nmaxWounds = game.user.character.system.hits.max;\n//set value to add\nmsgHeader = 'HEALTH LOST';\nmsgImg = 'modules/fvtt_mosh_1e_psg/icons/attributes/health.png';\nvalueMod = game.user.character.items.getName(\"Bleeding\").system.severity*-1;\n//set new value level\nif (curValue + valueMod > maxValue) {\n    newValue = maxValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n    newWounds = curWounds;\n} else if (curValue + valueMod < minValue) {\n    newValue = minValue;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n} else {\n    newValue = curValue + valueMod;\n    valueDiff = newValue - curValue;\n    actorImpact = valueMod - valueDiff;\n    newWounds = curWounds;\n}\n//update characters value level\ngame.user.character.update({'system.health.value': newValue});\ngame.user.character.update({'system.hits.value': newWounds});\n//create value flavor text\nif (game.user.character.system.class.value === 'Android') {\n    msgFlavor = `Your sensors detect significant nanofluid loss.<br><br>`;\n} else {\n    msgFlavor = `You feel dizzy as you bleed out.<br><br>`;\n}\n//create chat variables\nif (valueMod > 0 && newValue === maxValue && valueDiff === 0) {\n    msgOutcome = `You are already at full health.`;\n} else if (valueMod > 0 && valueDiff > 0) {\n    msgOutcome = `Health increased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueMod < 0 && valueDiff < 0) {\n    msgOutcome = `Health decreased from <strong>${curValue}</strong> to <strong>${newValue}</strong>.`;\n} else if (valueMod < 0 && valueDiff < 0 && newValue <= minValue) {\n    woundImpact = 1;\n    newWounds = curWounds + 1;\n    newValue = maxValue+actorImpact;\n    msgOutcome = `Health decreased by ${valueMod} points. You gain a wound and now have ${newValue} Health.<br><br>@Macro[Wound Check]{Make a Wound Check}`;\n} else if (valueMod < 0 && valueDiff < 0 && newValue <= minValue  && curWounds === maxWounds) {\n    woundImpact = 0;\n    newWounds = curWounds;\n    msgOutcome = `You are at death's door.<br><br>@Macro[Death Check]{Make a Death Check}`;\n}\n//create chat message\nmacroResult = `\n<div class=\"mosh\">\n<div class=\"rollcontainer\">\n    <div class=\"flexrow\" style=\"margin-bottom: 5px;\">\n    <div class=\"rollweaponh1\">${msgHeader}</div>\n    <div style=\"text-align: right\"><img class=\"roll-image\" src=\"${msgImg}\" /></div>\n    </div>\n    <div class=\"description\"\" style=\"margin-bottom: 20px;\">\n    <div class=\"body\">\n    ${msgFlavor} ${msgOutcome}\n    </div>\n    </div>\n</div>\n</div>\n`;\n//push chat message\nChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({token: actor}),\n    content: macroResult\n});","folder":null,"flags":{},"_stats": {"systemId":"mosh","systemVersion":"0.3.7","coreVersion":"11.300","createdTime":1685936572185,"modifiedTime":1686006479278,"lastModifiedBy":"6EeM38DJkcBWNAmw"}}